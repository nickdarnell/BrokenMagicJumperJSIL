/* Generated by JSIL v0.7.8 build 22841. See http://jsil.org/ for more information. */ 
/* Generating type stubs only */ 
var $asm06 = JSIL.DeclareAssembly("Microsoft.Xna.Framework.Net, Version=4.0.0.0, Culture=neutral, PublicKeyToken=842cf8be1de50553");

JSIL.DeclareNamespace("Microsoft");
JSIL.DeclareNamespace("Microsoft.Xna");
JSIL.DeclareNamespace("Microsoft.Xna.Framework");
JSIL.DeclareNamespace("Microsoft.Xna.Framework.Net");
/* class Microsoft.Xna.Framework.Net.NetworkSessionEndedEventArgs */ 

(function NetworkSessionEndedEventArgs$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.EventArgs"), 
      Name: "Microsoft.Xna.Framework.Net.NetworkSessionEndedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionEndReason")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EndReason", 
      new JSIL.MethodSignature($asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionEndReason"), [], [])
    );

    $.Field({Static:false, Public:false}, "endReason", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionEndReason")); 
    $.Property({Static:false, Public:true }, "EndReason", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionEndReason"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.Net.GamerJoinedEventArgs */ 

(function GamerJoinedEventArgs$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.EventArgs"), 
      Name: "Microsoft.Xna.Framework.Net.GamerJoinedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Gamer", 
      new JSIL.MethodSignature($asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer"), [], [])
    );

    $.Field({Static:false, Public:false}, "gamer", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")); 
    $.Property({Static:false, Public:true }, "Gamer", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.Net.GamerLeftEventArgs */ 

(function GamerLeftEventArgs$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.EventArgs"), 
      Name: "Microsoft.Xna.Framework.Net.GamerLeftEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Gamer", 
      new JSIL.MethodSignature($asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer"), [], [])
    );

    $.Field({Static:false, Public:false}, "gamer", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")); 
    $.Property({Static:false, Public:true }, "Gamer", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.Net.GameStartedEventArgs */ 

(function GameStartedEventArgs$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.EventArgs"), 
      Name: "Microsoft.Xna.Framework.Net.GameStartedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.Net.GameEndedEventArgs */ 

(function GameEndedEventArgs$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.EventArgs"), 
      Name: "Microsoft.Xna.Framework.Net.GameEndedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.Net.HostChangedEventArgs */ 

(function HostChangedEventArgs$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.EventArgs"), 
      Name: "Microsoft.Xna.Framework.Net.HostChangedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer"), $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_NewHost", 
      new JSIL.MethodSignature($asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_OldHost", 
      new JSIL.MethodSignature($asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer"), [], [])
    );

    $.Field({Static:false, Public:false}, "oldHost", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")); 
    $.Field({Static:false, Public:false}, "newHost", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")); 
    $.Property({Static:false, Public:true }, "OldHost", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer"));

    $.Property({Static:false, Public:true }, "NewHost", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.Net.WriteLeaderboardsEventArgs */ 

(function WriteLeaderboardsEventArgs$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.EventArgs"), 
      Name: "Microsoft.Xna.Framework.Net.WriteLeaderboardsEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSession"), $.UInt32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Gamer", 
      new JSIL.MethodSignature($asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsLeaving", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.Field({Static:false, Public:false}, "gamer", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")); 
    $.Field({Static:false, Public:false}, "isLeaving", $.Boolean); 
    $.Property({Static:false, Public:true }, "Gamer", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer"));

    $.Property({Static:false, Public:true }, "IsLeaving", $.Boolean);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.Net.NetworkSimulator */ 

(function NetworkSimulator$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.Net.NetworkSimulator", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SimulatedLatency", 
      new JSIL.MethodSignature($asm09.TypeRef("System.TimeSpan"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SimulatedPacketLoss", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "NormallyDistributedRandomLatency", 
      new JSIL.MethodSignature($.Int64, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SendData", 
      new JSIL.MethodSignature($.Boolean, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32, $asm06.TypeRef("Microsoft.Xna.Framework.Net.SendDataOptions"), 
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.LocalNetworkGamer"), $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SimulatedLatency", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.TimeSpan")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SimulatedPacketLoss", 
      new JSIL.MethodSignature(null, [$.Single], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "StoreLatentPacket", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32, $asm06.TypeRef("Microsoft.Xna.Framework.Net.SendDataOptions"), 
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.LocalNetworkGamer"), $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "TrySendLatentPacket", 
      new JSIL.MethodSignature($.Boolean, [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSimulator/LatentPacket"), $.Int64], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "TrySendLatentPackets", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Collections.Generic.Queue`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSimulator/LatentPacket")]), $.Int64], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Update", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.Field({Static:false, Public:false}, "simulatedPacketLoss", $.Single); 
    $.Field({Static:false, Public:false}, "simulatedLatency", $asm09.TypeRef("System.TimeSpan")); 
    $.Field({Static:false, Public:false}, "simulatedLatencyTicks", $.Int64); 
    $.Field({Static:false, Public:false}, "random", $asm09.TypeRef("System.Random")); 
    $.Field({Static:false, Public:false}, "unorderedPackets", $asm09.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSimulator/LatentPacket")])); 
    $.Field({Static:false, Public:false}, "encryptedOrderedPackets", $asm0B.TypeRef("System.Collections.Generic.Queue`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSimulator/LatentPacket")])); 
    $.Field({Static:false, Public:false}, "unencryptedOrderedPackets", $asm0B.TypeRef("System.Collections.Generic.Queue`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSimulator/LatentPacket")])); 
    $.Field({Static:false, Public:false}, "packetPool", $asm0B.TypeRef("System.Collections.Generic.Stack`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSimulator/LatentPacket")])); 
    $.Property({Static:false, Public:true }, "SimulatedPacketLoss", $.Single);

    $.Property({Static:false, Public:true }, "SimulatedLatency", $asm09.TypeRef("System.TimeSpan"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.Net.NetworkSimulator/LatentPacket */ 

(function LatentPacket$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.Net.NetworkSimulator/LatentPacket", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CompareTo", 
      new JSIL.MethodSignature($.Int32, [$.Type], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsStillValid", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.Field({Static:false, Public:true }, "SendTime", $.Int64); 
    $.Field({Static:false, Public:true }, "Data", $jsilcore.TypeRef("System.Array", [$.Byte])); 
    $.Field({Static:false, Public:true }, "Size", $.Int32); 
    $.Field({Static:false, Public:true }, "Options", $asm06.TypeRef("Microsoft.Xna.Framework.Net.SendDataOptions")); 
    $.Field({Static:false, Public:true }, "Sender", $asm06.TypeRef("Microsoft.Xna.Framework.Net.LocalNetworkGamer")); 
    $.Field({Static:false, Public:true }, "Recipient", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")); 
    $.Property({Static:false, Public:true }, "IsStillValid", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.IComparable`1", [$.Type])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.Net.PacketReader */ 

(function PacketReader$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.IO.BinaryReader"), 
      Name: "Microsoft.Xna.Framework.Net.PacketReader", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ByteArray", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Length", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Position", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReadColor", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Color"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadDouble", 
      new JSIL.MethodSignature($.Double, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReadMatrix", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReadQuaternion", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Quaternion"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadSingle", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReadVector2", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector2"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReadVector3", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReadVector4", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector4"), [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "Resize", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Position", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.Property({Static:false, Public:true }, "Length", $.Int32);

    $.Property({Static:false, Public:true }, "Position", $.Int32);

    $.Property({Static:false, Public:false}, "ByteArray", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.Net.PacketWriter */ 

(function PacketWriter$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.IO.BinaryWriter"), 
      Name: "Microsoft.Xna.Framework.Net.PacketWriter", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "Clear", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ByteArray", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Length", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Position", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Position", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Write", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector2")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Write", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Write", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector4")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Write", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Write", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Quaternion")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Write", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Color")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Write", 
      new JSIL.MethodSignature(null, [$.Single], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Write", 
      new JSIL.MethodSignature(null, [$.Double], [])
    );

    $.Property({Static:false, Public:true }, "Length", $.Int32);

    $.Property({Static:false, Public:true }, "Position", $.Int32);

    $.Property({Static:false, Public:false}, "ByteArray", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.Net.QualityOfService */ 

(function QualityOfService$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.Net.QualityOfService", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $asm09.TypeRef("System.TimeSpan"), $asm09.TypeRef("System.TimeSpan")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AverageRoundtripTime", 
      new JSIL.MethodSignature($asm09.TypeRef("System.TimeSpan"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BytesPerSecondDownstream", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BytesPerSecondUpstream", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsAvailable", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MinimumRoundtripTime", 
      new JSIL.MethodSignature($asm09.TypeRef("System.TimeSpan"), [], [])
    );

    $.Field({Static:false, Public:false}, "isAvailable", $.Boolean); 
    $.Field({Static:false, Public:false}, "bytesPerSecondUpstream", $.Int32); 
    $.Field({Static:false, Public:false}, "bytesPerSecondDownstream", $.Int32); 
    $.Field({Static:false, Public:false}, "averageRoundtripTime", $asm09.TypeRef("System.TimeSpan")); 
    $.Field({Static:false, Public:false}, "minimumRoundtripTime", $asm09.TypeRef("System.TimeSpan")); 
    $.Property({Static:false, Public:true }, "IsAvailable", $.Boolean);

    $.Property({Static:false, Public:true }, "BytesPerSecondUpstream", $.Int32);

    $.Property({Static:false, Public:true }, "BytesPerSecondDownstream", $.Int32);

    $.Property({Static:false, Public:true }, "AverageRoundtripTime", $asm09.TypeRef("System.TimeSpan"));

    $.Property({Static:false, Public:true }, "MinimumRoundtripTime", $asm09.TypeRef("System.TimeSpan"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.Net.NetworkSessionErrorHandler */ 

(function NetworkSessionErrorHandler$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("Microsoft.Xna.Framework.Net.NetworkSessionErrorHandler", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:true }, "ThrowExceptionFromResult", 
      new JSIL.MethodSignature(null, [$.UInt32], [])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum Microsoft.Xna.Framework.Net.SessionInputCommand */ 

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Net.SessionInputCommand", false, {
    SendData: 1, 
    EnableSendVoice: 2, 
    SetIsReady: 3, 
    StartGame: 4, 
    EndGame: 5, 
    ResetReady: 6, 
    RemoveMachine: 7, 
    SetGamerSlots: 8, 
    SetJoinInProgress: 9, 
    SetHostMigration: 10, 
    SetSessionProperty: 11, 
    SetGameMode: 12
  }, false
);

/* enum Microsoft.Xna.Framework.Net.SessionOutputCommand */ 

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Net.SessionOutputCommand", false, {
    SessionStateChanged: 1, 
    GamerJoined: 2, 
    GamerLeft: 3, 
    ReceivedData: 4, 
    UpdateSessionInfo: 5, 
    UpdateNetworkStats: 6, 
    SessionPropertyChanged: 7, 
    GameModeChanged: 8, 
    HostChanged: 9
  }, false
);

/* enum Microsoft.Xna.Framework.Net.NetworkGamerState */ 

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Net.NetworkGamerState", false, {
    IsHost: 1, 
    IsLocal: 2, 
    IsPrivateSlot: 4, 
    IsReady: 8, 
    HasVoice: 16, 
    IsTalking: 32, 
    IsMutedByLocalUser: 64, 
    IsGuest: 128, 
    HasLeftSession: 256
  }, true
);

/* enum Microsoft.Xna.Framework.Net.NetworkSessionType */ 

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Net.NetworkSessionType", true, {
    Local: 0, 
    SystemLink: 1, 
    PlayerMatch: 2, 
    Ranked: 3, 
    LocalWithLeaderboards: 4
  }, false
);

/* enum Microsoft.Xna.Framework.Net.NetworkSessionState */ 

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Net.NetworkSessionState", true, {
    Lobby: 0, 
    Playing: 1, 
    Ended: 2
  }, false
);

/* enum Microsoft.Xna.Framework.Net.NetworkSessionEndReason */ 

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Net.NetworkSessionEndReason", true, {
    ClientSignedOut: 0, 
    HostEndedSession: 1, 
    RemovedByHost: 2, 
    Disconnected: 3
  }, false
);

/* enum Microsoft.Xna.Framework.Net.SendDataOptions */ 

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Net.SendDataOptions", true, {
    None: 0, 
    Reliable: 1, 
    InOrder: 2, 
    ReliableInOrder: 3, 
    Chat: 4
  }, true
);

/* class Microsoft.Xna.Framework.Net.AvailableNetworkSession */ 

(function AvailableNetworkSession$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.Net.AvailableNetworkSession", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CurrentGamerCount", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_HostGamertag", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_OpenPrivateGamerSlots", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_OpenPublicGamerSlots", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_QualityOfService", 
      new JSIL.MethodSignature($asm06.TypeRef("Microsoft.Xna.Framework.Net.QualityOfService"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SessionProperties", 
      new JSIL.MethodSignature($asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionProperties"), [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetQualityOfService", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.Field({Static:false, Public:false}, "parent", $asm06.TypeRef("Microsoft.Xna.Framework.Net.AvailableNetworkSessionCollection")); 
    $.Field({Static:false, Public:false}, "index", $.Int32); 
    $.Field({Static:false, Public:false}, "hostGamertag", $.String); 
    $.Field({Static:false, Public:false}, "currentGamerCount", $.Int32); 
    $.Field({Static:false, Public:false}, "openPublicGamerSlots", $.Int32); 
    $.Field({Static:false, Public:false}, "openPrivateGamerSlots", $.Int32); 
    $.Field({Static:false, Public:false}, "sessionProperties", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionProperties")); 
    $.Field({Static:false, Public:false}, "qualityOfService", $asm06.TypeRef("Microsoft.Xna.Framework.Net.QualityOfService")); 
    $.Property({Static:false, Public:true }, "HostGamertag", $.String);

    $.Property({Static:false, Public:true }, "CurrentGamerCount", $.Int32);

    $.Property({Static:false, Public:true }, "OpenPublicGamerSlots", $.Int32);

    $.Property({Static:false, Public:true }, "OpenPrivateGamerSlots", $.Int32);

    $.Property({Static:false, Public:true }, "SessionProperties", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionProperties"));

    $.Property({Static:false, Public:true }, "QualityOfService", $asm06.TypeRef("Microsoft.Xna.Framework.Net.QualityOfService"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.Net.AvailableNetworkSessionCollection */ 

(function AvailableNetworkSessionCollection$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.AvailableNetworkSession")]), 
      Name: "Microsoft.Xna.Framework.Net.AvailableNetworkSessionCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.UInt32, $asm09.TypeRef("System.Collections.Generic.IList`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.AvailableNetworkSession")])], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "DisposeWorker", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsDisposed", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.Field({Static:false, Public:false}, "kernelHandle", $.UInt32); 
    $.Property({Static:false, Public:true }, "IsDisposed", $.Boolean);

    $.ImplementInterfaces(
      /* 6 */ $asm09.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.Net.NetworkGamer */ 

(function NetworkGamer$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Gamer"), 
      Name: "Microsoft.Xna.Framework.Net.NetworkGamer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSession"), $.UInt32, 
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamerState"), $.Byte, 
          $.Int32, $.String
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_HasLeftSession", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_HasVoice", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Id", 
      new JSIL.MethodSignature($.Byte, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsGuest", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsHost", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsLocal", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsMutedByLocalUser", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsPrivateSlot", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsReady", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsTalking", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Machine", 
      new JSIL.MethodSignature($asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkMachine"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RoundtripTime", 
      new JSIL.MethodSignature($asm09.TypeRef("System.TimeSpan"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Session", 
      new JSIL.MethodSignature($asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSession"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_IsReady", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Machine", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkMachine")], [])
    );

    $.Field({Static:false, Public:false}, "gamerState", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamerState")); 
    $.Field({Static:false, Public:false}, "session", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSession")); 
    $.Field({Static:false, Public:false}, "machine", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkMachine")); 
    $.Field({Static:false, Public:false}, "roundtripTime", $asm09.TypeRef("System.TimeSpan")); 
    $.Field({Static:false, Public:false}, "id", $.Byte); 
    $.Property({Static:false, Public:true }, "Session", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSession"));

    $.Property({Static:false, Public:true }, "Machine", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkMachine"));

    $.Property({Static:false, Public:true }, "IsHost", $.Boolean);

    $.Property({Static:false, Public:true }, "IsLocal", $.Boolean);

    $.Property({Static:false, Public:true }, "IsPrivateSlot", $.Boolean);

    $.Property({Static:false, Public:true }, "IsReady", $.Boolean);

    $.Property({Static:false, Public:true }, "HasVoice", $.Boolean);

    $.Property({Static:false, Public:true }, "IsTalking", $.Boolean);

    $.Property({Static:false, Public:true }, "IsMutedByLocalUser", $.Boolean);

    $.Property({Static:false, Public:true }, "IsGuest", $.Boolean);

    $.Property({Static:false, Public:true }, "RoundtripTime", $asm09.TypeRef("System.TimeSpan"));

    $.Property({Static:false, Public:true }, "Id", $.Byte);

    $.Property({Static:false, Public:true }, "HasLeftSession", $.Boolean);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.Net.LocalNetworkGamer */ 

(function LocalNetworkGamer$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer"), 
      Name: "Microsoft.Xna.Framework.Net.LocalNetworkGamer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 7, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSession"), $.UInt32, 
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamerState"), $.Byte, 
          $.Int32, $.String, 
          $asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "EnableSendVoice", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer"), $.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsDataAvailable", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SignedInGamer", 
      new JSIL.MethodSignature($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInGamer"), [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "LookUpSignedInGamer", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "QueueIncomingPacket", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer"), $asm09.TypeRef("System.IntPtr"), 
          $.Int32
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReceiveData", 
      new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("System.Array", [$.Byte]), $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReceiveData", 
      new JSIL.MethodSignature($.Int32, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")])
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReceiveData", 
      new JSIL.MethodSignature($.Int32, [$asm06.TypeRef("Microsoft.Xna.Framework.Net.PacketReader"), $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SendData", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.Byte]), $asm06.TypeRef("Microsoft.Xna.Framework.Net.SendDataOptions")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SendData", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $asm06.TypeRef("Microsoft.Xna.Framework.Net.SendDataOptions"), 
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SendData", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32, $asm06.TypeRef("Microsoft.Xna.Framework.Net.SendDataOptions")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SendData", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32, $asm06.TypeRef("Microsoft.Xna.Framework.Net.SendDataOptions"), 
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SendData", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("Microsoft.Xna.Framework.Net.PacketWriter"), $asm06.TypeRef("Microsoft.Xna.Framework.Net.SendDataOptions")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SendData", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.PacketWriter"), $asm06.TypeRef("Microsoft.Xna.Framework.Net.SendDataOptions"), 
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "SendDataNow", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32, $asm06.TypeRef("Microsoft.Xna.Framework.Net.SendDataOptions"), 
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "SendDataWorker", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32, $asm06.TypeRef("Microsoft.Xna.Framework.Net.SendDataOptions"), 
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SendPartyInvites", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.Field({Static:false, Public:false}, "signedInGamer", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInGamer")); 
    $.Field({Static:false, Public:false}, "signedInGamerIndex", $asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex")); 
    $.Field({Static:false, Public:false}, "incomingPackets", $asm0B.TypeRef("System.Collections.Generic.Queue`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.LocalNetworkGamer/IncomingPacket")])); 
    $.Field({Static:false, Public:false}, "incomingPacketData", $jsilcore.TypeRef("System.Array", [$.Byte])); 
    $.Field({Static:false, Public:false}, "packetDataOffset", $.Int32); 
    $.Property({Static:false, Public:true }, "SignedInGamer", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInGamer"));

    $.Property({Static:false, Public:true }, "IsDataAvailable", $.Boolean);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct Microsoft.Xna.Framework.Net.LocalNetworkGamer/IncomingPacket */ 

(function IncomingPacket$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.ValueType"), 
      Name: "Microsoft.Xna.Framework.Net.LocalNetworkGamer/IncomingPacket", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "Sender", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")); 
    $.Field({Static:false, Public:true }, "Offset", $.Int32); 
    $.Field({Static:false, Public:true }, "Size", $.Int32); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.Net.NetworkMachine */ 

(function NetworkMachine$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.Net.NetworkMachine", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Gamers", 
      new JSIL.MethodSignature($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerCollection`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")]), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveFromSession", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.Field({Static:false, Public:false}, "gamers", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerCollection`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")])); 
    $.Property({Static:false, Public:true }, "Gamers", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerCollection`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")]));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.Net.NetworkSession */ 

(function NetworkSession$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.Net.NetworkSession", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.UInt32, $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionType"), 
          $.Int32, $.Int32, 
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionProperties"), $.Boolean
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "add_GameEnded", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.EventHandler`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.GameEndedEventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "add_GamerJoined", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.EventHandler`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.GamerJoinedEventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "add_GamerLeft", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.EventHandler`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.GamerLeftEventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "add_GameStarted", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.EventHandler`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.GameStartedEventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "add_HostChanged", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.EventHandler`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.HostChangedEventArgs")])], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "add_InviteAccepted", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.EventHandler`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.InviteAcceptedEventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "add_SessionEnded", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.EventHandler`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionEndedEventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "add_WriteArbitratedLeaderboard", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.EventHandler`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.WriteLeaderboardsEventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "add_WriteTrueSkill", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.EventHandler`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.WriteLeaderboardsEventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "add_WriteUnarbitratedLeaderboard", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.EventHandler`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.WriteLeaderboardsEventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddLocalGamer", 
      new JSIL.MethodSignature(null, [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInGamer")], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginCreate", 
      new JSIL.MethodSignature($asm09.TypeRef("System.IAsyncResult"), [
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionType"), $.Int32, 
          $.Int32, $asm09.TypeRef("System.AsyncCallback"), 
          $.Object
        ], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginCreate", 
      new JSIL.MethodSignature($asm09.TypeRef("System.IAsyncResult"), [
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionType"), $.Int32, 
          $.Int32, $.Int32, 
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionProperties"), $asm09.TypeRef("System.AsyncCallback"), 
          $.Object
        ], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginCreate", 
      new JSIL.MethodSignature($asm09.TypeRef("System.IAsyncResult"), [
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionType"), $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInGamer")]), 
          $.Int32, $.Int32, 
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionProperties"), $asm09.TypeRef("System.AsyncCallback"), 
          $.Object
        ], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "BeginCreate", 
      new JSIL.MethodSignature($asm09.TypeRef("System.IAsyncResult"), [
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionType"), $.Int32, 
          $.Int32, $.Int32, 
          $.Int32, $.Int32, 
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionProperties"), $asm09.TypeRef("System.AsyncCallback"), 
          $.Object
        ], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginFind", 
      new JSIL.MethodSignature($asm09.TypeRef("System.IAsyncResult"), [
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionType"), $.Int32, 
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionProperties"), $asm09.TypeRef("System.AsyncCallback"), 
          $.Object
        ], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginFind", 
      new JSIL.MethodSignature($asm09.TypeRef("System.IAsyncResult"), [
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionType"), $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInGamer")]), 
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionProperties"), $asm09.TypeRef("System.AsyncCallback"), 
          $.Object
        ], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "BeginFind", 
      new JSIL.MethodSignature($asm09.TypeRef("System.IAsyncResult"), [
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionType"), $.Int32, 
          $.Int32, $.Int32, 
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionProperties"), $asm09.TypeRef("System.AsyncCallback"), 
          $.Object
        ], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginJoin", 
      new JSIL.MethodSignature($asm09.TypeRef("System.IAsyncResult"), [
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.AvailableNetworkSession"), $asm09.TypeRef("System.AsyncCallback"), 
          $.Object
        ], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginJoinInvited", 
      new JSIL.MethodSignature($asm09.TypeRef("System.IAsyncResult"), [
          $.Int32, $asm09.TypeRef("System.AsyncCallback"), 
          $.Object
        ], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginJoinInvited", 
      new JSIL.MethodSignature($asm09.TypeRef("System.IAsyncResult"), [
          $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInGamer")]), $asm09.TypeRef("System.AsyncCallback"), 
          $.Object
        ], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "BeginJoinInvited", 
      new JSIL.MethodSignature($asm09.TypeRef("System.IAsyncResult"), [
          $.Int32, $.Int32, 
          $asm09.TypeRef("System.AsyncCallback"), $.Object
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "CountFullGamerSlots", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$.Int32]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionType"), $.Int32, 
          $.Int32
        ], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionType"), $.Int32, 
          $.Int32, $.Int32, 
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionProperties")
        ], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionType"), $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInGamer")]), 
          $.Int32, $.Int32, 
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionProperties")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "DispatchUpdateKernelCall", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("JSIL.Reference", [$.UInt32]), $jsilcore.TypeRef("JSIL.Reference", [$.UInt32]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "Dispose", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "EndCreate", 
      new JSIL.MethodSignature($.Type, [$asm09.TypeRef("System.IAsyncResult")], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "EndCreateOrJoin", 
      new JSIL.MethodSignature($.Type, [
          $asm09.TypeRef("System.IAsyncResult"), $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.KernelCallType"), 
          $.Boolean
        ], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "EndFind", 
      new JSIL.MethodSignature($asm06.TypeRef("Microsoft.Xna.Framework.Net.AvailableNetworkSessionCollection"), [$asm09.TypeRef("System.IAsyncResult")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "EndGame", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "EndJoin", 
      new JSIL.MethodSignature($.Type, [$asm09.TypeRef("System.IAsyncResult")], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "EndJoinInvited", 
      new JSIL.MethodSignature($.Type, [$asm09.TypeRef("System.IAsyncResult")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "Find", 
      new JSIL.MethodSignature($asm06.TypeRef("Microsoft.Xna.Framework.Net.AvailableNetworkSessionCollection"), [
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionType"), $.Int32, 
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionProperties")
        ], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "Find", 
      new JSIL.MethodSignature($asm06.TypeRef("Microsoft.Xna.Framework.Net.AvailableNetworkSessionCollection"), [
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionType"), $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInGamer")]), 
          $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionProperties")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "FindGamerById", 
      new JSIL.MethodSignature($asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer"), [$.Byte], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AllGamers", 
      new JSIL.MethodSignature($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerCollection`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")]), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AllowHostMigration", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AllowJoinInProgress", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BytesPerSecondReceived", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BytesPerSecondSent", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Host", 
      new JSIL.MethodSignature($asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsDisposed", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsEveryoneReady", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsHost", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_LocalGamers", 
      new JSIL.MethodSignature($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerCollection`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.LocalNetworkGamer")]), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MaxGamers", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_NetworkSimulator", 
      new JSIL.MethodSignature($asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSimulator"), [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_PacketBuffer", 
      new JSIL.MethodSignature($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.UserPacketBuffer"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PreviousGamers", 
      new JSIL.MethodSignature($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerCollection`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")]), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PrivateGamerSlots", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RemoteGamers", 
      new JSIL.MethodSignature($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerCollection`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")]), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SessionProperties", 
      new JSIL.MethodSignature($asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionProperties"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SessionState", 
      new JSIL.MethodSignature($asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionState"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SessionType", 
      new JSIL.MethodSignature($asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionType"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SimulatedLatency", 
      new JSIL.MethodSignature($asm09.TypeRef("System.TimeSpan"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SimulatedPacketLoss", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetLocalGamers", 
      new JSIL.MethodSignature(null, [
          $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInGamer")]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "Join", 
      new JSIL.MethodSignature($.Type, [$asm06.TypeRef("Microsoft.Xna.Framework.Net.AvailableNetworkSession")], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "JoinInvited", 
      new JSIL.MethodSignature($.Type, [$.Int32], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "JoinInvited", 
      new JSIL.MethodSignature($.Type, [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInGamer")])], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "MinSupportedGamers", 
      new JSIL.MethodSignature($.Int32, [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionType")], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnInviteAccepted", 
      new JSIL.MethodSignature(null, [$.Object, $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.InviteAcceptedEventArgs")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessGamerJoined", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("JSIL.Pointer", [$.Byte])])], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessGamerLeft", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("JSIL.Pointer", [$.Byte])])], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessHostChanged", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("JSIL.Pointer", [$.Byte])])], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessReceivedData", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("JSIL.Pointer", [$.Byte])])], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessSessionPropertyChanged", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("JSIL.Pointer", [$.Byte])])], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessStateChanged", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("JSIL.Pointer", [$.Byte])])], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessUpdateNetworkStats", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("JSIL.Pointer", [$.Byte])])], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessUpdateResults", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessUpdateSessionInfo", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("JSIL.Pointer", [$.Byte])])], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "RaiseUpdateEvents", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_GameEnded", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.EventHandler`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.GameEndedEventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_GamerJoined", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.EventHandler`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.GamerJoinedEventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_GamerLeft", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.EventHandler`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.GamerLeftEventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_GameStarted", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.EventHandler`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.GameStartedEventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_HostChanged", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.EventHandler`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.HostChangedEventArgs")])], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "remove_InviteAccepted", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.EventHandler`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.InviteAcceptedEventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_SessionEnded", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.EventHandler`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionEndedEventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_WriteArbitratedLeaderboard", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.EventHandler`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.WriteLeaderboardsEventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_WriteTrueSkill", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.EventHandler`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.WriteLeaderboardsEventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_WriteUnarbitratedLeaderboard", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.EventHandler`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.WriteLeaderboardsEventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "ResetReady", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "SendAllowCommand", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("Microsoft.Xna.Framework.Net.SessionInputCommand"), $.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "sessionProperties_PropertyChanging", 
      new JSIL.MethodSignature(null, [$.Int32, $asm09.TypeRef("System.Nullable`1", [$.Int32])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AllowHostMigration", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AllowJoinInProgress", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MaxGamers", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_PrivateGamerSlots", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SimulatedLatency", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.TimeSpan")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SimulatedPacketLoss", 
      new JSIL.MethodSignature(null, [$.Single], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetGamerSlots", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "StartGame", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Update", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteTransitionCommand", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("Microsoft.Xna.Framework.Net.SessionInputCommand"), $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionState")], [])
    );

    $.Constant({Static:true , Public:true }, "MaxSupportedGamers", 31); 
    $.Constant({Static:true , Public:true }, "MaxPreviousGamers", 100); 
    $.Constant({Static:true , Public:false}, "initialPacketBufferSize", 16384); 
    $.Field({Static:false, Public:false}, "kernelHandle", $.UInt32); 
    $.Field({Static:false, Public:false}, "packetBuffer", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.UserPacketBuffer")); 
    $.Field({Static:false, Public:false}, "pendingEvents", $asm0B.TypeRef("System.Collections.Generic.Queue`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSession/PendingEvent")])); 
    $.Field({Static:true , Public:false}, "currentlyUpdatingSession", $.Type); 
    $.Field({Static:false, Public:false}, "sessionType", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionType")); 
    $.Field({Static:false, Public:false}, "sessionState", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionState")); 
    $.Field({Static:false, Public:false}, "isHost", $.Boolean); 
    $.Field({Static:false, Public:false}, "host", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")); 
    $.Field({Static:false, Public:false}, "allGamers", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerCollection`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")])); 
    $.Field({Static:false, Public:false}, "localGamers", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerCollection`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.LocalNetworkGamer")])); 
    $.Field({Static:false, Public:false}, "remoteGamers", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerCollection`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")])); 
    $.Field({Static:false, Public:false}, "previousGamers", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerCollection`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")])); 
    $.Field({Static:false, Public:false}, "maxGamers", $.Int32); 
    $.Field({Static:false, Public:false}, "privateGamerSlots", $.Int32); 
    $.Field({Static:false, Public:false}, "networkSimulator", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSimulator")); 
    $.Field({Static:false, Public:false}, "bytesPerSecondSent", $.Int32); 
    $.Field({Static:false, Public:false}, "bytesPerSecondReceived", $.Int32); 
    $.Field({Static:false, Public:false}, "sessionProperties", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionProperties")); 
    $.Field({Static:false, Public:false}, "allowJoinInProgress", $.Boolean); 
    $.Field({Static:false, Public:false}, "allowHostMigration", $.Boolean); 
    $.Field({Static:false, Public:false}, "SessionEnded", $asm09.TypeRef("System.EventHandler`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionEndedEventArgs")])); 
    $.Field({Static:false, Public:false}, "gamerJoined", $asm09.TypeRef("System.EventHandler`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.GamerJoinedEventArgs")])); 
    $.Field({Static:false, Public:false}, "GamerLeft", $asm09.TypeRef("System.EventHandler`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.GamerLeftEventArgs")])); 
    $.Field({Static:false, Public:false}, "gameStarted", $asm09.TypeRef("System.EventHandler`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.GameStartedEventArgs")])); 
    $.Field({Static:false, Public:false}, "GameEnded", $asm09.TypeRef("System.EventHandler`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.GameEndedEventArgs")])); 
    $.Field({Static:false, Public:false}, "HostChanged", $asm09.TypeRef("System.EventHandler`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.HostChangedEventArgs")])); 
    $.Field({Static:true , Public:false}, "inviteAccepted", $asm09.TypeRef("System.EventHandler`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.InviteAcceptedEventArgs")])); 
    $.Field({Static:true , Public:false}, "pendingInviteAccepted", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.InviteAcceptedEventArgs")); 
    $.Property({Static:false, Public:true }, "IsDisposed", $.Boolean);

    $.Property({Static:false, Public:false}, "PacketBuffer", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.UserPacketBuffer"));

    $.Property({Static:false, Public:true }, "SessionType", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionType"));

    $.Property({Static:false, Public:true }, "SessionState", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionState"));

    $.Property({Static:false, Public:true }, "IsHost", $.Boolean);

    $.Property({Static:false, Public:true }, "Host", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer"));

    $.Property({Static:false, Public:true }, "AllGamers", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerCollection`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")]));

    $.Property({Static:false, Public:true }, "LocalGamers", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerCollection`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.LocalNetworkGamer")]));

    $.Property({Static:false, Public:true }, "RemoteGamers", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerCollection`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")]));

    $.Property({Static:false, Public:true }, "PreviousGamers", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerCollection`1", [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")]));

    $.Property({Static:false, Public:true }, "IsEveryoneReady", $.Boolean);

    $.Property({Static:false, Public:true }, "MaxGamers", $.Int32);

    $.Property({Static:false, Public:true }, "PrivateGamerSlots", $.Int32);

    $.Property({Static:false, Public:true }, "SimulatedPacketLoss", $.Single);

    $.Property({Static:false, Public:true }, "SimulatedLatency", $asm09.TypeRef("System.TimeSpan"));

    $.Property({Static:false, Public:false}, "NetworkSimulator", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSimulator"));

    $.Property({Static:false, Public:true }, "BytesPerSecondSent", $.Int32);

    $.Property({Static:false, Public:true }, "BytesPerSecondReceived", $.Int32);

    $.Property({Static:false, Public:true }, "SessionProperties", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionProperties"));

    $.Property({Static:false, Public:true }, "AllowJoinInProgress", $.Boolean);

    $.Property({Static:false, Public:true }, "AllowHostMigration", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate Microsoft.Xna.Framework.Net.NetworkSession/PendingEvent */ 

JSIL.MakeDelegate("Microsoft.Xna.Framework.Net.NetworkSession/PendingEvent", false, []);

/* class Microsoft.Xna.Framework.Net.NetworkSession/<>c__DisplayClass12 */ 

(function $l$gc__DisplayClass12$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.Net.NetworkSession/<>c__DisplayClass12", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.Field({Static:false, Public:true }, "endReason", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionEndReason")); 
    $.Field({Static:false, Public:true }, "$this", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSession")); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Microsoft.Xna.Framework.Net.NetworkSession/<>c__DisplayClass15 */ 

(function $l$gc__DisplayClass15$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.Net.NetworkSession/<>c__DisplayClass15", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.Field({Static:false, Public:true }, "newGamer", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")); 
    $.Field({Static:false, Public:true }, "$this", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSession")); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Microsoft.Xna.Framework.Net.NetworkSession/<>c__DisplayClass18 */ 

(function $l$gc__DisplayClass18$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.Net.NetworkSession/<>c__DisplayClass18", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.Field({Static:false, Public:true }, "gamer", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")); 
    $.Field({Static:false, Public:true }, "$this", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSession")); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Microsoft.Xna.Framework.Net.NetworkSession/<>c__DisplayClass1b */ 

(function $l$gc__DisplayClass1b$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.Net.NetworkSession/<>c__DisplayClass1b", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.Field({Static:false, Public:true }, "oldHost", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkGamer")); 
    $.Field({Static:false, Public:true }, "$this", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSession")); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Microsoft.Xna.Framework.Net.NetworkSessionProperties */ 

(function NetworkSessionProperties$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.Net.NetworkSessionProperties", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "add_PropertyChanging", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionProperties/PropertyChangeHandler")], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateReadOnly", 
      new JSIL.MethodSignature($.Type, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Count", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Item", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Nullable`1", [$.Int32]), [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("System.Nullable`1", [$.Int32])]), [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadProperties", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("JSIL.Pointer", [$.Byte])])], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadProperty", 
      new JSIL.MethodSignature(null, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("JSIL.Pointer", [$.Byte])])], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "remove_PropertyChanging", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionProperties/PropertyChangeHandler")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Item", 
      new JSIL.MethodSignature(null, [$.Int32, $asm09.TypeRef("System.Nullable`1", [$.Int32])], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.ICollection$lSystem.Nullable$lSystem.Int32$g$g.Add", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.Nullable`1", [$.Int32])], [])
    )
      .Overrides(1, "Add");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.ICollection$lSystem.Nullable$lSystem.Int32$g$g.Clear", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(1, "Clear");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.ICollection$lSystem.Nullable$lSystem.Int32$g$g.Contains", 
      new JSIL.MethodSignature($.Boolean, [$asm09.TypeRef("System.Nullable`1", [$.Int32])], [])
    )
      .Overrides(1, "Contains");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.ICollection$lSystem.Nullable$lSystem.Int32$g$g.CopyTo", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm09.TypeRef("System.Nullable`1", [$.Int32])]), $.Int32], [])
    )
      .Overrides(1, "CopyTo");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.ICollection$lSystem.Nullable$lSystem.Int32$g$g.get_IsReadOnly", 
      new JSIL.MethodSignature($.Boolean, [], [])
    )
      .Overrides(1, "get_IsReadOnly");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.ICollection$lSystem.Nullable$lSystem.Int32$g$g.Remove", 
      new JSIL.MethodSignature($.Boolean, [$asm09.TypeRef("System.Nullable`1", [$.Int32])], [])
    )
      .Overrides(1, "Remove");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IList$lSystem.Nullable$lSystem.Int32$g$g.IndexOf", 
      new JSIL.MethodSignature($.Int32, [$asm09.TypeRef("System.Nullable`1", [$.Int32])], [])
    )
      .Overrides(0, "IndexOf");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IList$lSystem.Nullable$lSystem.Int32$g$g.Insert", 
      new JSIL.MethodSignature(null, [$.Int32, $asm09.TypeRef("System.Nullable`1", [$.Int32])], [])
    )
      .Overrides(0, "Insert");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IList$lSystem.Nullable$lSystem.Int32$g$g.RemoveAt", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    )
      .Overrides(0, "RemoveAt");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.IEnumerator"), [], [])
    )
      .Overrides(3, "GetEnumerator");

    $.ExternalMethod({Static:true , Public:false}, "WriteProperties", 
      new JSIL.MethodSignature(null, [
          $.Type, $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.UserPacketBuffer"), 
          $jsilcore.TypeRef("JSIL.Pointer", [$.Byte])
        ], [])
    );

    $.Constant({Static:true , Public:false}, "PropertyCount", 8); 
    $.Field({Static:false, Public:false}, "data", $jsilcore.TypeRef("System.Array", [$asm09.TypeRef("System.Nullable`1", [$.Int32])])); 
    $.Field({Static:false, Public:false}, "PropertyChanging", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionProperties/PropertyChangeHandler")); 
    $.Property({Static:false, Public:true , Virtual:true }, "Item", $asm09.TypeRef("System.Nullable`1", [$.Int32]));

    $.Property({Static:false, Public:true , Virtual:true }, "Count", $.Int32);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.ICollection$lSystem.Nullable$lSystem.Int32$g$g.IsReadOnly", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IList`1", [$asm09.TypeRef("System.Nullable`1", [$.Int32])]), 
      /* 1 */ $asm09.TypeRef("System.Collections.Generic.ICollection`1", [$asm09.TypeRef("System.Nullable`1", [$.Int32])]), 
      /* 2 */ $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("System.Nullable`1", [$.Int32])]), 
      /* 3 */ $asm09.TypeRef("System.Collections.IEnumerable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* delegate Microsoft.Xna.Framework.Net.NetworkSessionProperties/PropertyChangeHandler */ 

JSIL.MakeDelegate("Microsoft.Xna.Framework.Net.NetworkSessionProperties/PropertyChangeHandler", false, []);

/* enum Microsoft.Xna.Framework.Net.NetworkSessionJoinError */ 

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Net.NetworkSessionJoinError", true, {
    SessionNotFound: 0, 
    SessionNotJoinable: 1, 
    SessionFull: 2
  }, false
);

/* class Microsoft.Xna.Framework.Net.NetworkSessionJoinException */ 

(function NetworkSessionJoinException$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.NetworkException"), 
      Name: "Microsoft.Xna.Framework.Net.NetworkSessionJoinException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionJoinError")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm09.TypeRef("System.Exception")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm09.TypeRef("System.Runtime.Serialization.StreamingContext")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_JoinError", 
      new JSIL.MethodSignature($asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionJoinError"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetObjectData", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm09.TypeRef("System.Runtime.Serialization.StreamingContext")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_JoinError", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionJoinError")], [])
    );

    $.Field({Static:false, Public:false}, "joinError", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionJoinError")); 
    $.Property({Static:false, Public:true }, "JoinError", $asm06.TypeRef("Microsoft.Xna.Framework.Net.NetworkSessionJoinError"));

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

