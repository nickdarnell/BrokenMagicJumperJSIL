/* Generated by JSIL v0.7.8 build 22841. See http://jsil.org/ for more information. */ 
/* Generating type stubs only */ 
var $asm07 = JSIL.DeclareAssembly("Microsoft.Xna.Framework.Storage, Version=4.0.0.0, Culture=neutral, PublicKeyToken=842cf8be1de50553");

JSIL.DeclareNamespace("Microsoft");
JSIL.DeclareNamespace("Microsoft.Xna");
JSIL.DeclareNamespace("Microsoft.Xna.Framework");
JSIL.DeclareNamespace("Microsoft.Xna.Framework.Storage");
/* class Microsoft.Xna.Framework.Storage.StorageDevice */ 

(function StorageDevice$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.Storage.StorageDevice", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.UInt32, $asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.UInt32], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "add_DeviceChanged", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.EventHandler`1", [$asm09.TypeRef("System.EventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginOpenContainer", 
      new JSIL.MethodSignature($asm09.TypeRef("System.IAsyncResult"), [
          $.String, $asm09.TypeRef("System.AsyncCallback"), 
          $.Object
        ], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginShowSelector", 
      new JSIL.MethodSignature($asm09.TypeRef("System.IAsyncResult"), [
          $asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex"), $asm09.TypeRef("System.AsyncCallback"), 
          $.Object
        ], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginShowSelector", 
      new JSIL.MethodSignature($asm09.TypeRef("System.IAsyncResult"), [
          $asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex"), $.Int32, 
          $.Int32, $asm09.TypeRef("System.AsyncCallback"), 
          $.Object
        ], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginShowSelector", 
      new JSIL.MethodSignature($asm09.TypeRef("System.IAsyncResult"), [$asm09.TypeRef("System.AsyncCallback"), $.Object], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginShowSelector", 
      new JSIL.MethodSignature($asm09.TypeRef("System.IAsyncResult"), [
          $.Int32, $.Int32, 
          $asm09.TypeRef("System.AsyncCallback"), $.Object
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "DeleteContainer", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "EndOpenContainer", 
      new JSIL.MethodSignature($asm07.TypeRef("Microsoft.Xna.Framework.Storage.StorageContainer"), [$asm09.TypeRef("System.IAsyncResult")], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "EndShowSelector", 
      new JSIL.MethodSignature($.Type, [$asm09.TypeRef("System.IAsyncResult")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_FreeSpace", 
      new JSIL.MethodSignature($.Int64, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsConnected", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TotalSpace", 
      new JSIL.MethodSignature($.Int64, [], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnDeviceChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm09.TypeRef("System.EventArgs")], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "remove_DeviceChanged", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.EventHandler`1", [$asm09.TypeRef("System.EventArgs")])], [])
    );

    $.Field({Static:false, Public:false}, "deviceIndex", $.UInt32); 
    $.Field({Static:false, Public:false}, "playerIndex", $.Int32); 
    $.Field({Static:true , Public:false}, "DeviceChanged", $asm09.TypeRef("System.EventHandler`1", [$asm09.TypeRef("System.EventArgs")])); 
    $.Property({Static:false, Public:true }, "FreeSpace", $.Int64);

    $.Property({Static:false, Public:true }, "IsConnected", $.Boolean);

    $.Property({Static:false, Public:true }, "TotalSpace", $.Int64);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.Storage.StorageContainer */ 

(function StorageContainer$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.Storage.StorageContainer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("Microsoft.Xna.Framework.Storage.StorageDevice"), $asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex"), 
          $.String
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "add_Disposing", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.EventHandler`1", [$asm09.TypeRef("System.EventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateDirectory", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateFile", 
      new JSIL.MethodSignature($asm09.TypeRef("System.IO.Stream"), [$.String], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "DeleteContainer", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("Microsoft.Xna.Framework.Storage.StorageDevice"), $asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex"), 
          $.String, $.Boolean
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "DeleteDirectory", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "DeleteFile", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "DirectoryExists", 
      new JSIL.MethodSignature($.Boolean, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "Dispose", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "DisposeOverride", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "FileExists", 
      new JSIL.MethodSignature($.Boolean, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "FinishCreation", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DisplayName", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsDisposed", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_StorageDevice", 
      new JSIL.MethodSignature($asm07.TypeRef("Microsoft.Xna.Framework.Storage.StorageDevice"), [], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetDeviceFolder", 
      new JSIL.MethodSignature($.String, [$.UInt32], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetDirectoryForContainer", 
      new JSIL.MethodSignature($asm09.TypeRef("System.IO.DirectoryInfo"), [
          $asm07.TypeRef("Microsoft.Xna.Framework.Storage.StorageDevice"), $.String, 
          $asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetDirectoryNames", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.String]), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetDirectoryNames", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.String]), [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetFileNames", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.String]), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetFileNames", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.String]), [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetFullPath", 
      new JSIL.MethodSignature($.String, [$.String], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetGameTitle", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "OpenFile", 
      new JSIL.MethodSignature($asm09.TypeRef("System.IO.Stream"), [$.String, $asm09.TypeRef("System.IO.FileMode")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "OpenFile", 
      new JSIL.MethodSignature($asm09.TypeRef("System.IO.Stream"), [
          $.String, $asm09.TypeRef("System.IO.FileMode"), 
          $asm09.TypeRef("System.IO.FileAccess")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "OpenFile", 
      new JSIL.MethodSignature($asm09.TypeRef("System.IO.Stream"), [
          $.String, $asm09.TypeRef("System.IO.FileMode"), 
          $asm09.TypeRef("System.IO.FileAccess"), $asm09.TypeRef("System.IO.FileShare")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_Disposing", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.EventHandler`1", [$asm09.TypeRef("System.EventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateArguments", 
      new JSIL.MethodSignature($.String, [$.String, $.String], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "VerifyNotDisposed", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.Field({Static:false, Public:false}, "Disposing", $asm09.TypeRef("System.EventHandler`1", [$asm09.TypeRef("System.EventArgs")])); 
    $.Field({Static:false, Public:false}, "_device", $asm07.TypeRef("Microsoft.Xna.Framework.Storage.StorageDevice")); 
    $.Field({Static:false, Public:false}, "_playerIndex", $asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex")); 
    $.Field({Static:false, Public:false}, "_displayName", $.String); 
    $.Field({Static:false, Public:false}, "_rootPath", $.String); 
    $.Field({Static:false, Public:false}, "_isDisposed", $.Boolean); 
    $.Property({Static:false, Public:true }, "DisplayName", $.String);

    $.Property({Static:false, Public:true }, "StorageDevice", $asm07.TypeRef("Microsoft.Xna.Framework.Storage.StorageDevice"));

    $.Property({Static:false, Public:true }, "IsDisposed", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.Storage.StorageContainerOpenAsyncResult */ 

(function StorageContainerOpenAsyncResult$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.Storage.StorageContainerOpenAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("Microsoft.Xna.Framework.Storage.StorageDevice"), $.Int32, 
          $.String, $.Object
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_AsyncState", 
      new JSIL.MethodSignature($.Object, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_AsyncWaitHandle", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Threading.WaitHandle"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CompletedSynchronously", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsCompleted", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.Field({Static:false, Public:false}, "mre", $asm09.TypeRef("System.Threading.ManualResetEvent")); 
    $.Field({Static:false, Public:false}, "storageDevice", $asm07.TypeRef("Microsoft.Xna.Framework.Storage.StorageDevice")); 
    $.Field({Static:false, Public:false}, "playerIndex", $.Int32); 
    $.Field({Static:false, Public:false}, "displayName", $.String); 
    $.Field({Static:false, Public:false}, "stateObject", $.Object); 
    $.Field({Static:false, Public:false}, "endHasBeenCalled", $.Boolean); 
    $.Property({Static:false, Public:true , Virtual:true }, "AsyncState", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "AsyncWaitHandle", $asm09.TypeRef("System.Threading.WaitHandle"));

    $.Property({Static:false, Public:true , Virtual:true }, "CompletedSynchronously", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "IsCompleted", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.IAsyncResult")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.Storage.StorageDeviceAsyncResult */ 

(function StorageDeviceAsyncResult$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.Storage.StorageDeviceAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.Object, $.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_AsyncState", 
      new JSIL.MethodSignature($.Object, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_AsyncWaitHandle", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Threading.WaitHandle"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CompletedSynchronously", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsCompleted", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.Field({Static:false, Public:false}, "syncObject", $.Object); 
    $.Field({Static:false, Public:false}, "mre", $asm09.TypeRef("System.Threading.ManualResetEvent")); 
    $.Field({Static:false, Public:false}, "playerIndex", $.Int32); 
    $.Field({Static:false, Public:false}, "endHasBeenCalled", $.Boolean); 
    $.Property({Static:false, Public:true , Virtual:true }, "AsyncState", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "AsyncWaitHandle", $asm09.TypeRef("System.Threading.WaitHandle"));

    $.Property({Static:false, Public:true , Virtual:true }, "CompletedSynchronously", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "IsCompleted", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.IAsyncResult")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.Storage.StorageDeviceNotConnectedException */ 

(function StorageDeviceNotConnectedException$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Runtime.InteropServices.ExternalException"), 
      Name: "Microsoft.Xna.Framework.Storage.StorageDeviceNotConnectedException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm09.TypeRef("System.Exception")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm09.TypeRef("System.Runtime.Serialization.StreamingContext")], [])
    );

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1032:ImplementStandardExceptionConstructors"]; });

})();

