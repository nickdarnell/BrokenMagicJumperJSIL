/* Generated by JSIL v0.7.8 build 40775. See http://jsil.org/ for more information. */ 
/* Generating type stubs only */ 
var $asm14 = JSIL.DeclareAssembly("System.Xml.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

JSIL.DeclareNamespace("System");
JSIL.DeclareNamespace("System.Xml");
JSIL.DeclareNamespace("System.Xml.Linq");
/* class System.Xml.Linq.XName */ 

(function XName$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XName", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XNamespace"), $.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "Get", 
      new JSIL.MethodSignature($.Type, [$.String], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "Get", 
      new JSIL.MethodSignature($.Type, [$.String, $.String], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_LocalName", 
      new JSIL.MethodSignature($.String, [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Namespace", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XNamespace"), [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_NamespaceName", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Equality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Implicit", 
      new JSIL.MethodSignature($.Type, [$.String], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Inequality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IEquatable$lSystem.Xml.Linq.XName$g.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Type], [])
    )
      .Overrides(0, "Equals");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Runtime.Serialization.ISerializable.GetObjectData", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm09.TypeRef("System.Runtime.Serialization.StreamingContext")], [])
    )
      .Overrides(1, "GetObjectData");

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.Field({Static:false, Public:false}, "ns", $asm14.TypeRef("System.Xml.Linq.XNamespace")); 
    $.Field({Static:false, Public:false}, "localName", $.String); 
    $.Field({Static:false, Public:false}, "hashCode", $.Int32); 
    $.Property({Static:false, Public:true }, "LocalName", $.String);

    $.Property({Static:false, Public:true }, "Namespace", $asm14.TypeRef("System.Xml.Linq.XNamespace"));

    $.Property({Static:false, Public:true }, "NamespaceName", $.String);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.IEquatable`1", [$.Type]), 
      /* 1 */ $asm09.TypeRef("System.Runtime.Serialization.ISerializable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("System.Runtime.Serialization.KnownTypeAttribute"), function () { return [$asm14.System.Xml.Linq.NameSerializer.__Type__]; });

})();

/* class System.Xml.Linq.XNamespace */ 

(function XNamespace$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XNamespace", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "EnsureNamespace", 
      new JSIL.MethodSignature($.Type, [$jsilcore.TypeRef("JSIL.Reference", [$asm09.TypeRef("System.WeakReference")]), $.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "ExtractLocalName", 
      new JSIL.MethodSignature($.String, [$asm14.TypeRef("System.Xml.Linq.XName")], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "ExtractNamespace", 
      new JSIL.MethodSignature($.String, [$asm09.TypeRef("System.WeakReference")], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "Get", 
      new JSIL.MethodSignature($.Type, [$.String], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "Get", 
      new JSIL.MethodSignature($.Type, [
          $.String, $.Int32, 
          $.Int32
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_NamespaceName", 
      new JSIL.MethodSignature($.String, [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:true }, "get_None", 
      new JSIL.MethodSignature($.Type, [], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "get_Xml", 
      new JSIL.MethodSignature($.Type, [], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "get_Xmlns", 
      new JSIL.MethodSignature($.Type, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetName", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XName"), [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetName", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XName"), [
          $.String, $.Int32, 
          $.Int32
        ], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Addition", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XName"), [$.Type, $.String], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Equality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Implicit", 
      new JSIL.MethodSignature($.Type, [$.String], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Inequality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.Field({Static:true , Public:false}, "namespaces", $asm14.TypeRef("System.Xml.Linq.XHashtable`1", [$asm09.TypeRef("System.WeakReference")])); 
    $.Field({Static:true , Public:false}, "refNone", $asm09.TypeRef("System.WeakReference")); 
    $.Field({Static:true , Public:false}, "refXml", $asm09.TypeRef("System.WeakReference")); 
    $.Field({Static:true , Public:false}, "refXmlns", $asm09.TypeRef("System.WeakReference")); 
    $.Field({Static:false, Public:false}, "namespaceName", $.String); 
    $.Field({Static:false, Public:false}, "hashCode", $.Int32); 
    $.Field({Static:false, Public:false}, "names", $asm14.TypeRef("System.Xml.Linq.XHashtable`1", [$asm14.TypeRef("System.Xml.Linq.XName")])); 
    $.Constant({Static:true , Public:false}, "xmlPrefixNamespace", "http://www.w3.org/XML/1998/namespace"); 
    $.Constant({Static:true , Public:false}, "xmlnsPrefixNamespace", "http://www.w3.org/2000/xmlns/"); 
    $.Constant({Static:true , Public:false}, "NamesCapacity", 8); 
    $.Constant({Static:true , Public:false}, "NamespacesCapacity", 32); 
    $.Property({Static:false, Public:true }, "NamespaceName", $.String);

    $.Property({Static:true , Public:true }, "None", $.Type);

    $.Property({Static:true , Public:true }, "Xml", $.Type);

    $.Property({Static:true , Public:true }, "Xmlns", $.Type);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.XHashtable`1 */ 

(function XHashtable$b1$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XHashtable`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TValue"], 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XHashtable`1/ExtractKeyDelegate", [new JSIL.GenericParameter("TValue", "System.Xml.Linq.XHashtable`1")]), $.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      new JSIL.MethodSignature(new JSIL.GenericParameter("TValue", "System.Xml.Linq.XHashtable`1"), [new JSIL.GenericParameter("TValue", "System.Xml.Linq.XHashtable`1")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "TryGetValue", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $.Int32, 
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [new JSIL.GenericParameter("TValue", "System.Xml.Linq.XHashtable`1")])
        ], [])
    );

    $.Field({Static:false, Public:false}, "state", $asm14.TypeRef("System.Xml.Linq.XHashtable`1/XHashtableState", [$.GenericParameter("TValue")])); 
    $.Constant({Static:true , Public:false}, "StartingHash", 352654597); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.Xml.Linq.XHashtable`1/ExtractKeyDelegate */ 

JSIL.MakeDelegate("System.Xml.Linq.XHashtable`1/ExtractKeyDelegate", false, ["TValue"]);

/* class System.Xml.Linq.XHashtable`1/XHashtableState */ 

(function XHashtableState$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XHashtable`1/XHashtableState", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TValue"], 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XHashtable`1/ExtractKeyDelegate", [new JSIL.GenericParameter("TValue", "System.Xml.Linq.XHashtable`1/XHashtableState")]), $.Int32], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "ComputeHashCode", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $.Int32
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "FindEntry", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $.String, 
          $.Int32, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Resize", 
      new JSIL.MethodSignature($.Type, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "TryAdd", 
      new JSIL.MethodSignature($.Boolean, [new JSIL.GenericParameter("TValue", "System.Xml.Linq.XHashtable`1/XHashtableState"), $jsilcore.TypeRef("JSIL.Reference", [new JSIL.GenericParameter("TValue", "System.Xml.Linq.XHashtable`1/XHashtableState")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "TryGetValue", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $.Int32, 
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [new JSIL.GenericParameter("TValue", "System.Xml.Linq.XHashtable`1/XHashtableState")])
        ], [])
    );

    $.Field({Static:false, Public:false}, "buckets", $jsilcore.TypeRef("System.Array", [$.Int32])); 
    $.Field({Static:false, Public:false}, "entries", $jsilcore.TypeRef("System.Array", [$asm14.TypeRef("System.Xml.Linq.XHashtable`1/XHashtableState/Entry", [$.GenericParameter("TValue")])])); 
    $.Field({Static:false, Public:false}, "numEntries", $.Int32); 
    $.Field({Static:false, Public:false}, "extractKey", $asm14.TypeRef("System.Xml.Linq.XHashtable`1/ExtractKeyDelegate", [$.GenericParameter("TValue")])); 
    $.Constant({Static:true , Public:false}, "EndOfList", 0); 
    $.Constant({Static:true , Public:false}, "FullList", -1); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Xml.Linq.XHashtable`1/XHashtableState/Entry */ 

(function Entry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.ValueType"), 
      Name: "System.Xml.Linq.XHashtable`1/XHashtableState/Entry", 
      IsPublic: false, 
      IsReferenceType: false, 
      GenericParameters: ["TValue"], 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "Value", $.GenericParameter("TValue")); 
    $.Field({Static:false, Public:true }, "HashCode", $.Int32); 
    $.Field({Static:false, Public:true }, "Next", $.Int32); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.XObject */ 

(function XObject$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XObject", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "add_Changed", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.EventHandler`1", [$asm14.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "add_Changing", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.EventHandler`1", [$asm14.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddAnnotation", 
      new JSIL.MethodSignature(null, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Annotation", 
      new JSIL.MethodSignature($.Object, [$asm09.TypeRef("System.Type")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Annotation", 
      new JSIL.MethodSignature("!!0", [], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "Annotations", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Object]), [$asm09.TypeRef("System.Type")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Annotations", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), [], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "AnnotationsIterator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Object]), [$asm09.TypeRef("System.Type")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BaseUri", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Document", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XDocument"), [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasBaseUri", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NodeType", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.XmlNodeType"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Parent", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XElement"), [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetSaveOptionsFromAnnotations", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.SaveOptions"), [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "NotifyChanged", 
      new JSIL.MethodSignature($.Boolean, [$.Object, $asm14.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "NotifyChanging", 
      new JSIL.MethodSignature($.Boolean, [$.Object, $asm14.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_Changed", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.EventHandler`1", [$asm14.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_Changing", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.EventHandler`1", [$asm14.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveAnnotations", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.Type")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveAnnotations", 
      new JSIL.MethodSignature(null, [], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetBaseUri", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetLineInfo", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "SkipNotify", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.get_LineNumber", 
      new JSIL.MethodSignature($.Int32, [], [])
    )
      .Overrides(0, "get_LineNumber");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.get_LinePosition", 
      new JSIL.MethodSignature($.Int32, [], [])
    )
      .Overrides(0, "get_LinePosition");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.HasLineInfo", 
      new JSIL.MethodSignature($.Boolean, [], [])
    )
      .Overrides(0, "HasLineInfo");

    $.Field({Static:false, Public:false}, "parent", $asm14.TypeRef("System.Xml.Linq.XContainer")); 
    $.Field({Static:false, Public:false}, "annotations", $.Object); 
    $.Property({Static:false, Public:true }, "BaseUri", $.String);

    $.Property({Static:false, Public:true }, "Document", $asm14.TypeRef("System.Xml.Linq.XDocument"));

    $.Property({Static:false, Public:true , Virtual:true }, "NodeType", $asm13.TypeRef("System.Xml.XmlNodeType"));

    $.Property({Static:false, Public:true }, "Parent", $asm14.TypeRef("System.Xml.Linq.XElement"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.LineNumber", $.Int32);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.LinePosition", $.Int32);

    $.Property({Static:false, Public:false}, "HasBaseUri", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm13.TypeRef("System.Xml.IXmlLineInfo")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.XObject/<Annotations>d__6`1 */ 

(function $lAnnotations$gd__6$b1$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XObject/<Annotations>d__6`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    )
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      new JSIL.MethodSignature($.Boolean, [], [])
    )
      .Overrides(3, "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lT$g.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [new JSIL.GenericParameter("T", "System.Xml.Linq.XObject/<Annotations>d__6`1")]), [], [])
    )
      .Overrides(0, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lT$g.get_Current", 
      new JSIL.MethodSignature(new JSIL.GenericParameter("T", "System.Xml.Linq.XObject/<Annotations>d__6`1"), [], [])
    )
      .Overrides(2, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.IEnumerator"), [], [])
    )
      .Overrides(1, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"))
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      new JSIL.MethodSignature($.Object, [], [])
    )
      .Overrides(3, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(3, "Reset")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(4, "Dispose");

    $.Field({Static:false, Public:false}, "$current", $.GenericParameter("T")); 
    $.Field({Static:false, Public:false}, "$state", $.Int32); 
    $.Field({Static:false, Public:false}, "$initialThreadId", $.Int32); 
    $.Field({Static:false, Public:true }, "$this", $asm14.TypeRef("System.Xml.Linq.XObject")); 
    $.Field({Static:false, Public:true }, "a", $jsilcore.TypeRef("System.Array", [$.Object])); 
    $.Field({Static:false, Public:true }, "result", $.GenericParameter("T")); 
    $.Field({Static:false, Public:true }, "i", $.Int32); 
    $.Field({Static:false, Public:true }, "obj$a", $.Object); 
    $.Field({Static:false, Public:true }, "result$b", $.GenericParameter("T")); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lT$g.Current", new JSIL.GenericParameter("T", "System.Xml.Linq.XObject/<Annotations>d__6`1"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [new JSIL.GenericParameter("T", "System.Xml.Linq.XObject/<Annotations>d__6`1")]), 
      /* 1 */ $asm09.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [new JSIL.GenericParameter("T", "System.Xml.Linq.XObject/<Annotations>d__6`1")]), 
      /* 3 */ $asm09.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm09.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.XObject/<AnnotationsIterator>d__0 */ 

(function $lAnnotationsIterator$gd__0$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XObject/<AnnotationsIterator>d__0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    )
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      new JSIL.MethodSignature($.Boolean, [], [])
    )
      .Overrides(3, "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Object$g.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$.Object]), [], [])
    )
      .Overrides(0, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Object$g.get_Current", 
      new JSIL.MethodSignature($.Object, [], [])
    )
      .Overrides(2, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.IEnumerator"), [], [])
    )
      .Overrides(1, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      new JSIL.MethodSignature($.Object, [], [])
    )
      .Overrides(3, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(3, "Reset")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(4, "Dispose");

    $.Field({Static:false, Public:false}, "$current", $.Object); 
    $.Field({Static:false, Public:false}, "$state", $.Int32); 
    $.Field({Static:false, Public:false}, "$initialThreadId", $.Int32); 
    $.Field({Static:false, Public:true }, "$this", $asm14.TypeRef("System.Xml.Linq.XObject")); 
    $.Field({Static:false, Public:true }, "type", $asm09.TypeRef("System.Type")); 
    $.Field({Static:false, Public:true }, "$type", $asm09.TypeRef("System.Type")); 
    $.Field({Static:false, Public:true }, "a", $jsilcore.TypeRef("System.Array", [$.Object])); 
    $.Field({Static:false, Public:true }, "i", $.Int32); 
    $.Field({Static:false, Public:true }, "obj", $.Object); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Object$g.Current", $.Object);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Object]), 
      /* 1 */ $asm09.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$.Object]), 
      /* 3 */ $asm09.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm09.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* enum System.Xml.Linq.XObjectChange */ 

JSIL.MakeEnum(
  "System.Xml.Linq.XObjectChange", true, {
    Add: 0, 
    Remove: 1, 
    Name: 2, 
    Value: 3
  }, false
);

/* class System.Xml.Linq.XObjectChangeEventArgs */ 

(function XObjectChangeEventArgs$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.EventArgs"), 
      Name: "System.Xml.Linq.XObjectChangeEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XObjectChange")], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_ObjectChange", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XObjectChange"), [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false}, "objectChange", $asm14.TypeRef("System.Xml.Linq.XObjectChange")); 
    $.Field({Static:true , Public:true , ReadOnly:true }, "Add", $.Type); 
    $.Field({Static:true , Public:true , ReadOnly:true }, "Remove", $.Type); 
    $.Field({Static:true , Public:true , ReadOnly:true }, "Name", $.Type); 
    $.Field({Static:true , Public:true , ReadOnly:true }, "Value", $.Type); 
    $.Property({Static:false, Public:true }, "ObjectChange", $asm14.TypeRef("System.Xml.Linq.XObjectChange"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.XNode */ 

(function XNode$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Xml.Linq.XObject"), 
      Name: "System.Xml.Linq.XNode", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "AddAfterSelf", 
      new JSIL.MethodSignature(null, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddAfterSelf", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.Object])], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "AddBeforeSelf", 
      new JSIL.MethodSignature(null, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddBeforeSelf", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.Object])], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "Ancestors", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "Ancestors", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [$asm14.TypeRef("System.Xml.Linq.XName")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "AppendText", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.Text.StringBuilder")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CloneNode", 
      new JSIL.MethodSignature($.Type, [], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "CompareDocumentOrder", 
      new JSIL.MethodSignature($.Int32, [$.Type, $.Type], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateReader", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.XmlReader"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateReader", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.XmlReader"), [$asm14.TypeRef("System.Xml.Linq.ReaderOptions")], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "DeepEquals", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "DeepEquals", 
      new JSIL.MethodSignature($.Boolean, [$.Type], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "ElementsAfterSelf", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "ElementsAfterSelf", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [$asm14.TypeRef("System.Xml.Linq.XName")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "ElementsBeforeSelf", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "ElementsBeforeSelf", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [$asm14.TypeRef("System.Xml.Linq.XName")], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "get_DocumentOrderComparer", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XNodeDocumentOrderComparer"), [], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "get_EqualityComparer", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XNodeEqualityComparer"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_NextNode", 
      new JSIL.MethodSignature($.Type, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PreviousNode", 
      new JSIL.MethodSignature($.Type, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetAncestors", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [$asm14.TypeRef("System.Xml.Linq.XName"), $.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetDeepHashCode", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetElementsAfterSelf", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [$asm14.TypeRef("System.Xml.Linq.XName")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetElementsBeforeSelf", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [$asm14.TypeRef("System.Xml.Linq.XName")], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetXmlReaderSettings", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.XmlReaderSettings"), [$asm14.TypeRef("System.Xml.Linq.LoadOptions")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetXmlString", 
      new JSIL.MethodSignature($.String, [$asm14.TypeRef("System.Xml.Linq.SaveOptions")], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetXmlWriterSettings", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.XmlWriterSettings"), [$asm14.TypeRef("System.Xml.Linq.SaveOptions")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "IsAfter", 
      new JSIL.MethodSignature($.Boolean, [$.Type], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "IsBefore", 
      new JSIL.MethodSignature($.Boolean, [$.Type], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "NodesAfterSelf", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type]), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "NodesBeforeSelf", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type]), [], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "ReadFrom", 
      new JSIL.MethodSignature($.Type, [$asm13.TypeRef("System.Xml.XmlReader")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Remove", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReplaceWith", 
      new JSIL.MethodSignature(null, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReplaceWith", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.Object])], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "ToString", 
      new JSIL.MethodSignature($.String, [$asm14.TypeRef("System.Xml.Linq.SaveOptions")], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteTo", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.Xml.XmlWriter")], [])
    );

    $.Field({Static:true , Public:false}, "documentOrderComparer", $asm14.TypeRef("System.Xml.Linq.XNodeDocumentOrderComparer")); 
    $.Field({Static:true , Public:false}, "equalityComparer", $asm14.TypeRef("System.Xml.Linq.XNodeEqualityComparer")); 
    $.Field({Static:false, Public:false}, "next", $.Type); 
    $.Property({Static:false, Public:true }, "NextNode", $.Type);

    $.Property({Static:false, Public:true }, "PreviousNode", $.Type);

    $.Property({Static:true , Public:true }, "DocumentOrderComparer", $asm14.TypeRef("System.Xml.Linq.XNodeDocumentOrderComparer"));

    $.Property({Static:true , Public:true }, "EqualityComparer", $asm14.TypeRef("System.Xml.Linq.XNodeEqualityComparer"));

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.XNode/<NodesAfterSelf>d__0 */ 

(function $lNodesAfterSelf$gd__0$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XNode/<NodesAfterSelf>d__0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    )
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      new JSIL.MethodSignature($.Boolean, [], [])
    )
      .Overrides(3, "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XNode$g.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XNode")]), [], [])
    )
      .Overrides(0, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XNode$g.get_Current", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XNode"), [], [])
    )
      .Overrides(2, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.IEnumerator"), [], [])
    )
      .Overrides(1, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      new JSIL.MethodSignature($.Object, [], [])
    )
      .Overrides(3, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(3, "Reset")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(4, "Dispose");

    $.Field({Static:false, Public:false}, "$current", $asm14.TypeRef("System.Xml.Linq.XNode")); 
    $.Field({Static:false, Public:false}, "$state", $.Int32); 
    $.Field({Static:false, Public:false}, "$initialThreadId", $.Int32); 
    $.Field({Static:false, Public:true }, "$this", $asm14.TypeRef("System.Xml.Linq.XNode")); 
    $.Field({Static:false, Public:true }, "n", $asm14.TypeRef("System.Xml.Linq.XNode")); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XNode$g.Current", $asm14.TypeRef("System.Xml.Linq.XNode"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XNode")]), 
      /* 1 */ $asm09.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XNode")]), 
      /* 3 */ $asm09.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm09.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.XNode/<NodesBeforeSelf>d__4 */ 

(function $lNodesBeforeSelf$gd__4$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XNode/<NodesBeforeSelf>d__4", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    )
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      new JSIL.MethodSignature($.Boolean, [], [])
    )
      .Overrides(3, "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XNode$g.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XNode")]), [], [])
    )
      .Overrides(0, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XNode$g.get_Current", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XNode"), [], [])
    )
      .Overrides(2, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.IEnumerator"), [], [])
    )
      .Overrides(1, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      new JSIL.MethodSignature($.Object, [], [])
    )
      .Overrides(3, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(3, "Reset")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(4, "Dispose");

    $.Field({Static:false, Public:false}, "$current", $asm14.TypeRef("System.Xml.Linq.XNode")); 
    $.Field({Static:false, Public:false}, "$state", $.Int32); 
    $.Field({Static:false, Public:false}, "$initialThreadId", $.Int32); 
    $.Field({Static:false, Public:true }, "$this", $asm14.TypeRef("System.Xml.Linq.XNode")); 
    $.Field({Static:false, Public:true }, "n", $asm14.TypeRef("System.Xml.Linq.XNode")); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XNode$g.Current", $asm14.TypeRef("System.Xml.Linq.XNode"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XNode")]), 
      /* 1 */ $asm09.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XNode")]), 
      /* 3 */ $asm09.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm09.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.XNode/<GetAncestors>d__8 */ 

(function $lGetAncestors$gd__8$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XNode/<GetAncestors>d__8", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    )
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      new JSIL.MethodSignature($.Boolean, [], [])
    )
      .Overrides(3, "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XElement$g.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [], [])
    )
      .Overrides(0, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.get_Current", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XElement"), [], [])
    )
      .Overrides(2, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.IEnumerator"), [], [])
    )
      .Overrides(1, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      new JSIL.MethodSignature($.Object, [], [])
    )
      .Overrides(3, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(3, "Reset")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(4, "Dispose");

    $.Field({Static:false, Public:false}, "$current", $asm14.TypeRef("System.Xml.Linq.XElement")); 
    $.Field({Static:false, Public:false}, "$state", $.Int32); 
    $.Field({Static:false, Public:false}, "$initialThreadId", $.Int32); 
    $.Field({Static:false, Public:true }, "$this", $asm14.TypeRef("System.Xml.Linq.XNode")); 
    $.Field({Static:false, Public:true }, "$name", $asm14.TypeRef("System.Xml.Linq.XName")); 
    $.Field({Static:false, Public:true }, "$name", $asm14.TypeRef("System.Xml.Linq.XName")); 
    $.Field({Static:false, Public:true }, "self", $.Boolean); 
    $.Field({Static:false, Public:true }, "$self", $.Boolean); 
    $.Field({Static:false, Public:true }, "e", $asm14.TypeRef("System.Xml.Linq.XElement")); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.Current", $asm14.TypeRef("System.Xml.Linq.XElement"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), 
      /* 1 */ $asm09.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), 
      /* 3 */ $asm09.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm09.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.XNode/<GetElementsAfterSelf>d__c */ 

(function $lGetElementsAfterSelf$gd__c$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XNode/<GetElementsAfterSelf>d__c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    )
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      new JSIL.MethodSignature($.Boolean, [], [])
    )
      .Overrides(3, "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XElement$g.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [], [])
    )
      .Overrides(0, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.get_Current", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XElement"), [], [])
    )
      .Overrides(2, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.IEnumerator"), [], [])
    )
      .Overrides(1, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      new JSIL.MethodSignature($.Object, [], [])
    )
      .Overrides(3, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(3, "Reset")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(4, "Dispose");

    $.Field({Static:false, Public:false}, "$current", $asm14.TypeRef("System.Xml.Linq.XElement")); 
    $.Field({Static:false, Public:false}, "$state", $.Int32); 
    $.Field({Static:false, Public:false}, "$initialThreadId", $.Int32); 
    $.Field({Static:false, Public:true }, "$this", $asm14.TypeRef("System.Xml.Linq.XNode")); 
    $.Field({Static:false, Public:true }, "$name", $asm14.TypeRef("System.Xml.Linq.XName")); 
    $.Field({Static:false, Public:true }, "$name", $asm14.TypeRef("System.Xml.Linq.XName")); 
    $.Field({Static:false, Public:true }, "n$d", $asm14.TypeRef("System.Xml.Linq.XNode")); 
    $.Field({Static:false, Public:true }, "e$e", $asm14.TypeRef("System.Xml.Linq.XElement")); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.Current", $asm14.TypeRef("System.Xml.Linq.XElement"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), 
      /* 1 */ $asm09.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), 
      /* 3 */ $asm09.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm09.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.XNode/<GetElementsBeforeSelf>d__11 */ 

(function $lGetElementsBeforeSelf$gd__11$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XNode/<GetElementsBeforeSelf>d__11", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    )
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      new JSIL.MethodSignature($.Boolean, [], [])
    )
      .Overrides(3, "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XElement$g.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [], [])
    )
      .Overrides(0, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.get_Current", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XElement"), [], [])
    )
      .Overrides(2, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.IEnumerator"), [], [])
    )
      .Overrides(1, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      new JSIL.MethodSignature($.Object, [], [])
    )
      .Overrides(3, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(3, "Reset")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(4, "Dispose");

    $.Field({Static:false, Public:false}, "$current", $asm14.TypeRef("System.Xml.Linq.XElement")); 
    $.Field({Static:false, Public:false}, "$state", $.Int32); 
    $.Field({Static:false, Public:false}, "$initialThreadId", $.Int32); 
    $.Field({Static:false, Public:true }, "$this", $asm14.TypeRef("System.Xml.Linq.XNode")); 
    $.Field({Static:false, Public:true }, "$name", $asm14.TypeRef("System.Xml.Linq.XName")); 
    $.Field({Static:false, Public:true }, "$name", $asm14.TypeRef("System.Xml.Linq.XName")); 
    $.Field({Static:false, Public:true }, "n", $asm14.TypeRef("System.Xml.Linq.XNode")); 
    $.Field({Static:false, Public:true }, "e", $asm14.TypeRef("System.Xml.Linq.XElement")); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.Current", $asm14.TypeRef("System.Xml.Linq.XElement"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), 
      /* 1 */ $asm09.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), 
      /* 3 */ $asm09.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm09.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.XNodeDocumentOrderComparer */ 

(function XNodeDocumentOrderComparer$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XNodeDocumentOrderComparer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Compare", 
      new JSIL.MethodSignature($.Int32, [$asm14.TypeRef("System.Xml.Linq.XNode"), $asm14.TypeRef("System.Xml.Linq.XNode")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IComparer.Compare", 
      new JSIL.MethodSignature($.Int32, [$.Object, $.Object], [])
    )
      .Overrides(0, "Compare");

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.IComparer"), 
      /* 1 */ $asm09.TypeRef("System.Collections.Generic.IComparer`1", [$asm14.TypeRef("System.Xml.Linq.XNode")])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.XNodeEqualityComparer */ 

(function XNodeEqualityComparer$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XNodeEqualityComparer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$asm14.TypeRef("System.Xml.Linq.XNode"), $asm14.TypeRef("System.Xml.Linq.XNode")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      new JSIL.MethodSignature($.Int32, [$asm14.TypeRef("System.Xml.Linq.XNode")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEqualityComparer.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object, $.Object], [])
    )
      .Overrides(0, "Equals");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEqualityComparer.GetHashCode", 
      new JSIL.MethodSignature($.Int32, [$.Object], [])
    )
      .Overrides(0, "GetHashCode");

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.IEqualityComparer"), 
      /* 1 */ $asm09.TypeRef("System.Collections.Generic.IEqualityComparer`1", [$asm14.TypeRef("System.Xml.Linq.XNode")])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.XText */ 

(function XText$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Xml.Linq.XNode"), 
      Name: "System.Xml.Linq.XText", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Type], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.Xml.XmlReader")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "AppendText", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.Text.StringBuilder")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CloneNode", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XNode"), [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "DeepEquals", 
      new JSIL.MethodSignature($.Boolean, [$asm14.TypeRef("System.Xml.Linq.XNode")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NodeType", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.XmlNodeType"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Value", 
      new JSIL.MethodSignature($.String, [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetDeepHashCode", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Value", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteTo", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.Xml.XmlWriter")], [])
    );

    $.Field({Static:false, Public:false}, "text", $.String); 
    $.Property({Static:false, Public:true , Virtual:true }, "NodeType", $asm13.TypeRef("System.Xml.XmlNodeType"));

    $.Property({Static:false, Public:true }, "Value", $.String);

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.XCData */ 

(function XCData$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Xml.Linq.XText"), 
      Name: "System.Xml.Linq.XCData", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.Xml.XmlReader")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CloneNode", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XNode"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NodeType", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.XmlNodeType"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteTo", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.Xml.XmlWriter")], [])
    );

    $.Property({Static:false, Public:true , Virtual:true }, "NodeType", $asm13.TypeRef("System.Xml.XmlNodeType"));

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.XContainer */ 

(function XContainer$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Xml.Linq.XNode"), 
      Name: "System.Xml.Linq.XContainer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.Type], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      new JSIL.MethodSignature(null, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.Object])], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "AddAttribute", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XAttribute")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "AddAttributeSkipNotify", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XAttribute")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddContentSkipNotify", 
      new JSIL.MethodSignature(null, [$.Object], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddContentToList", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.Collections.Generic.List`1", [$.Object]), $.Object], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddFirst", 
      new JSIL.MethodSignature(null, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddFirst", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.Object])], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "AddNode", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XNode")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddNodeSkipNotify", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XNode")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddString", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddStringSkipNotify", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "AppendNode", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XNode")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "AppendNodeSkipNotify", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XNode")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "AppendText", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.Text.StringBuilder")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "CollectText", 
      new JSIL.MethodSignature($.String, [$jsilcore.TypeRef("JSIL.Reference", [$asm14.TypeRef("System.Xml.Linq.XNode")])], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ContentsEqual", 
      new JSIL.MethodSignature($.Boolean, [$.Type], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ContentsHashCode", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ConvertTextToNode", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateWriter", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.XmlWriter"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "DescendantNodes", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XNode")]), [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "Descendants", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "Descendants", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [$asm14.TypeRef("System.Xml.Linq.XName")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Element", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XElement"), [$asm14.TypeRef("System.Xml.Linq.XName")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Elements", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "Elements", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [$asm14.TypeRef("System.Xml.Linq.XName")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_FirstNode", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XNode"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_LastNode", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XNode"), [], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetContentSnapshot", 
      new JSIL.MethodSignature($.Object, [$.Object], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetDateTimeString", 
      new JSIL.MethodSignature($.String, [$asm09.TypeRef("System.DateTime")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetDescendantNodes", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XNode")]), [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetDescendants", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [$asm14.TypeRef("System.Xml.Linq.XName"), $.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetElements", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [$asm14.TypeRef("System.Xml.Linq.XName")], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetStringValue", 
      new JSIL.MethodSignature($.String, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetTextOnly", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Nodes", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XNode")]), [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadContentFrom", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.Xml.XmlReader")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadContentFrom", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.Xml.XmlReader"), $asm14.TypeRef("System.Xml.Linq.LoadOptions")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "RemoveNode", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XNode")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveNodes", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "RemoveNodesSkipNotify", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReplaceNodes", 
      new JSIL.MethodSignature(null, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReplaceNodes", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.Object])], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateNode", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XNode"), $asm14.TypeRef("System.Xml.Linq.XNode")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateString", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteContentTo", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.Xml.XmlWriter")], [])
    );

    $.Field({Static:false, Public:false}, "content", $.Object); 
    $.Property({Static:false, Public:true }, "FirstNode", $asm14.TypeRef("System.Xml.Linq.XNode"));

    $.Property({Static:false, Public:true }, "LastNode", $asm14.TypeRef("System.Xml.Linq.XNode"));

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.XContainer/<Nodes>d__0 */ 

(function $lNodes$gd__0$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XContainer/<Nodes>d__0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    )
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      new JSIL.MethodSignature($.Boolean, [], [])
    )
      .Overrides(3, "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XNode$g.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XNode")]), [], [])
    )
      .Overrides(0, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XNode$g.get_Current", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XNode"), [], [])
    )
      .Overrides(2, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.IEnumerator"), [], [])
    )
      .Overrides(1, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      new JSIL.MethodSignature($.Object, [], [])
    )
      .Overrides(3, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(3, "Reset")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(4, "Dispose");

    $.Field({Static:false, Public:false}, "$current", $asm14.TypeRef("System.Xml.Linq.XNode")); 
    $.Field({Static:false, Public:false}, "$state", $.Int32); 
    $.Field({Static:false, Public:false}, "$initialThreadId", $.Int32); 
    $.Field({Static:false, Public:true }, "$this", $asm14.TypeRef("System.Xml.Linq.XContainer")); 
    $.Field({Static:false, Public:true }, "n", $asm14.TypeRef("System.Xml.Linq.XNode")); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XNode$g.Current", $asm14.TypeRef("System.Xml.Linq.XNode"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XNode")]), 
      /* 1 */ $asm09.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XNode")]), 
      /* 3 */ $asm09.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm09.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.XContainer/<GetDescendantNodes>d__4 */ 

(function $lGetDescendantNodes$gd__4$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XContainer/<GetDescendantNodes>d__4", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    )
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      new JSIL.MethodSignature($.Boolean, [], [])
    )
      .Overrides(3, "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XNode$g.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XNode")]), [], [])
    )
      .Overrides(0, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XNode$g.get_Current", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XNode"), [], [])
    )
      .Overrides(2, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.IEnumerator"), [], [])
    )
      .Overrides(1, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      new JSIL.MethodSignature($.Object, [], [])
    )
      .Overrides(3, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(3, "Reset")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(4, "Dispose");

    $.Field({Static:false, Public:false}, "$current", $asm14.TypeRef("System.Xml.Linq.XNode")); 
    $.Field({Static:false, Public:false}, "$state", $.Int32); 
    $.Field({Static:false, Public:false}, "$initialThreadId", $.Int32); 
    $.Field({Static:false, Public:true }, "$this", $asm14.TypeRef("System.Xml.Linq.XContainer")); 
    $.Field({Static:false, Public:true }, "self", $.Boolean); 
    $.Field({Static:false, Public:true }, "$self", $.Boolean); 
    $.Field({Static:false, Public:true }, "n", $asm14.TypeRef("System.Xml.Linq.XNode")); 
    $.Field({Static:false, Public:true }, "c", $asm14.TypeRef("System.Xml.Linq.XContainer")); 
    $.Field({Static:false, Public:true }, "first", $asm14.TypeRef("System.Xml.Linq.XNode")); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XNode$g.Current", $asm14.TypeRef("System.Xml.Linq.XNode"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XNode")]), 
      /* 1 */ $asm09.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XNode")]), 
      /* 3 */ $asm09.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm09.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.XContainer/<GetDescendants>d__a */ 

(function $lGetDescendants$gd__a$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XContainer/<GetDescendants>d__a", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    )
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      new JSIL.MethodSignature($.Boolean, [], [])
    )
      .Overrides(3, "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XElement$g.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [], [])
    )
      .Overrides(0, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.get_Current", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XElement"), [], [])
    )
      .Overrides(2, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.IEnumerator"), [], [])
    )
      .Overrides(1, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      new JSIL.MethodSignature($.Object, [], [])
    )
      .Overrides(3, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(3, "Reset")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(4, "Dispose");

    $.Field({Static:false, Public:false}, "$current", $asm14.TypeRef("System.Xml.Linq.XElement")); 
    $.Field({Static:false, Public:false}, "$state", $.Int32); 
    $.Field({Static:false, Public:false}, "$initialThreadId", $.Int32); 
    $.Field({Static:false, Public:true }, "$this", $asm14.TypeRef("System.Xml.Linq.XContainer")); 
    $.Field({Static:false, Public:true }, "$name", $asm14.TypeRef("System.Xml.Linq.XName")); 
    $.Field({Static:false, Public:true }, "$name", $asm14.TypeRef("System.Xml.Linq.XName")); 
    $.Field({Static:false, Public:true }, "self", $.Boolean); 
    $.Field({Static:false, Public:true }, "$self", $.Boolean); 
    $.Field({Static:false, Public:true }, "e$b", $asm14.TypeRef("System.Xml.Linq.XElement")); 
    $.Field({Static:false, Public:true }, "n$c", $asm14.TypeRef("System.Xml.Linq.XNode")); 
    $.Field({Static:false, Public:true }, "c$d", $asm14.TypeRef("System.Xml.Linq.XContainer")); 
    $.Field({Static:false, Public:true }, "e$e", $asm14.TypeRef("System.Xml.Linq.XElement")); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.Current", $asm14.TypeRef("System.Xml.Linq.XElement"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), 
      /* 1 */ $asm09.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), 
      /* 3 */ $asm09.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm09.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.XContainer/<GetElements>d__11 */ 

(function $lGetElements$gd__11$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XContainer/<GetElements>d__11", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    )
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      new JSIL.MethodSignature($.Boolean, [], [])
    )
      .Overrides(3, "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XElement$g.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [], [])
    )
      .Overrides(0, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.get_Current", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XElement"), [], [])
    )
      .Overrides(2, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.IEnumerator"), [], [])
    )
      .Overrides(1, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      new JSIL.MethodSignature($.Object, [], [])
    )
      .Overrides(3, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(3, "Reset")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(4, "Dispose");

    $.Field({Static:false, Public:false}, "$current", $asm14.TypeRef("System.Xml.Linq.XElement")); 
    $.Field({Static:false, Public:false}, "$state", $.Int32); 
    $.Field({Static:false, Public:false}, "$initialThreadId", $.Int32); 
    $.Field({Static:false, Public:true }, "$this", $asm14.TypeRef("System.Xml.Linq.XContainer")); 
    $.Field({Static:false, Public:true }, "$name", $asm14.TypeRef("System.Xml.Linq.XName")); 
    $.Field({Static:false, Public:true }, "$name", $asm14.TypeRef("System.Xml.Linq.XName")); 
    $.Field({Static:false, Public:true }, "n", $asm14.TypeRef("System.Xml.Linq.XNode")); 
    $.Field({Static:false, Public:true }, "e", $asm14.TypeRef("System.Xml.Linq.XElement")); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.Current", $asm14.TypeRef("System.Xml.Linq.XElement"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), 
      /* 1 */ $asm09.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), 
      /* 3 */ $asm09.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm09.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.XElement */ 

(function XElement$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Xml.Linq.XContainer"), 
      Name: "System.Xml.Linq.XElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XName")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XName"), $.Object], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XName"), $jsilcore.TypeRef("System.Array", [$.Object])], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Type], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XStreamingElement")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.Xml.XmlReader")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.Xml.XmlReader"), $asm14.TypeRef("System.Xml.Linq.LoadOptions")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "AddAttribute", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XAttribute")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "AddAttributeSkipNotify", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XAttribute")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "AncestorsAndSelf", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type]), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "AncestorsAndSelf", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type]), [$asm14.TypeRef("System.Xml.Linq.XName")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "AppendAttribute", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XAttribute")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "AppendAttributeSkipNotify", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XAttribute")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Attribute", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XAttribute"), [$asm14.TypeRef("System.Xml.Linq.XName")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Attributes", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XAttribute")]), [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "Attributes", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XAttribute")]), [$asm14.TypeRef("System.Xml.Linq.XName")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "AttributesEqual", 
      new JSIL.MethodSignature($.Boolean, [$.Type], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CloneNode", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XNode"), [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "DeepEquals", 
      new JSIL.MethodSignature($.Boolean, [$asm14.TypeRef("System.Xml.Linq.XNode")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "DescendantNodesAndSelf", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XNode")]), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "DescendantsAndSelf", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type]), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "DescendantsAndSelf", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type]), [$asm14.TypeRef("System.Xml.Linq.XName")], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "get_EmptySequence", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type]), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_FirstAttribute", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XAttribute"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_HasAttributes", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_HasElements", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsEmpty", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_LastAttribute", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XAttribute"), [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XName"), [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NodeType", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.XmlNodeType"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Value", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetAttributes", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XAttribute")]), [$asm14.TypeRef("System.Xml.Linq.XName")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetDeepHashCode", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetDefaultNamespace", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XNamespace"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetNamespaceOfPrefix", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XNamespace"), [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetNamespaceOfPrefixInScope", 
      new JSIL.MethodSignature($.String, [$.String, $.Type], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetPrefixOfNamespace", 
      new JSIL.MethodSignature($.String, [$asm14.TypeRef("System.Xml.Linq.XNamespace")], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$.String], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$.String, $asm14.TypeRef("System.Xml.Linq.LoadOptions")], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$asm09.TypeRef("System.IO.Stream")], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$asm09.TypeRef("System.IO.Stream"), $asm14.TypeRef("System.Xml.Linq.LoadOptions")], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$asm09.TypeRef("System.IO.TextReader")], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$asm09.TypeRef("System.IO.TextReader"), $asm14.TypeRef("System.Xml.Linq.LoadOptions")], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$asm13.TypeRef("System.Xml.XmlReader")], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$asm13.TypeRef("System.Xml.XmlReader"), $asm14.TypeRef("System.Xml.Linq.LoadOptions")], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.String, [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.Boolean, [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Nullable`1", [$.Boolean]), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.Int32, [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Nullable`1", [$.Int32]), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.UInt32, [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Nullable`1", [$.UInt32]), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.Int64, [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Nullable`1", [$.Int64]), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.UInt64, [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Nullable`1", [$.UInt64]), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.Single, [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Nullable`1", [$.Single]), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.Double, [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Nullable`1", [$.Double]), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Decimal"), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Nullable`1", [$asm09.TypeRef("System.Decimal")]), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.DateTime"), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Nullable`1", [$asm09.TypeRef("System.DateTime")]), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.DateTimeOffset"), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Nullable`1", [$asm09.TypeRef("System.DateTimeOffset")]), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.TimeSpan"), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Nullable`1", [$asm09.TypeRef("System.TimeSpan")]), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Guid"), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Nullable`1", [$asm09.TypeRef("System.Guid")]), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "Parse", 
      new JSIL.MethodSignature($.Type, [$.String], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:true }, "Parse", 
      new JSIL.MethodSignature($.Type, [$.String, $asm14.TypeRef("System.Xml.Linq.LoadOptions")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadElementFrom", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.Xml.XmlReader"), $asm14.TypeRef("System.Xml.Linq.LoadOptions")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveAll", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "RemoveAttribute", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XAttribute")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveAttributes", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "RemoveAttributesSkipNotify", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReplaceAll", 
      new JSIL.MethodSignature(null, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReplaceAll", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.Object])], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "ReplaceAttributes", 
      new JSIL.MethodSignature(null, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReplaceAttributes", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.Object])], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$.String, $asm14.TypeRef("System.Xml.Linq.SaveOptions")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.IO.Stream")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.IO.Stream"), $asm14.TypeRef("System.Xml.Linq.SaveOptions")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.IO.TextWriter")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.IO.TextWriter"), $asm14.TypeRef("System.Xml.Linq.SaveOptions")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.Xml.XmlWriter")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Name", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XName")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Value", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetAttributeValue", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XName"), $.Object], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetElementValue", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XName"), $.Object], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetEndElementLineInfo", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Xml.Serialization.IXmlSerializable.GetSchema", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.Schema.XmlSchema"), [], [])
    )
      .Overrides(1, "GetSchema");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Xml.Serialization.IXmlSerializable.ReadXml", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.Xml.XmlReader")], [])
    )
      .Overrides(1, "ReadXml");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Xml.Serialization.IXmlSerializable.WriteXml", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.Xml.XmlWriter")], [])
    )
      .Overrides(1, "WriteXml");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateNode", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XNode"), $asm14.TypeRef("System.Xml.Linq.XNode")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteTo", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.Xml.XmlWriter")], [])
    );

    $.Field({Static:true , Public:false}, "emptySequence", $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type])); 
    $.Field({Static:false, Public:false}, "$name", $asm14.TypeRef("System.Xml.Linq.XName")); 
    $.Field({Static:false, Public:false}, "lastAttr", $asm14.TypeRef("System.Xml.Linq.XAttribute")); 
    $.Property({Static:true , Public:true }, "EmptySequence", $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type]));

    $.Property({Static:false, Public:true }, "FirstAttribute", $asm14.TypeRef("System.Xml.Linq.XAttribute"));

    $.Property({Static:false, Public:true }, "HasAttributes", $.Boolean);

    $.Property({Static:false, Public:true }, "HasElements", $.Boolean);

    $.Property({Static:false, Public:true }, "IsEmpty", $.Boolean);

    $.Property({Static:false, Public:true }, "LastAttribute", $asm14.TypeRef("System.Xml.Linq.XAttribute"));

    $.Property({Static:false, Public:true }, "Name", $asm14.TypeRef("System.Xml.Linq.XName"));

    $.Property({Static:false, Public:true , Virtual:true }, "NodeType", $asm13.TypeRef("System.Xml.XmlNodeType"));

    $.Property({Static:false, Public:true }, "Value", $.String);

    $.ImplementInterfaces(
      /* 1 */ $asm13.TypeRef("System.Xml.Serialization.IXmlSerializable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0B.TypeRef("System.ComponentModel.TypeDescriptionProviderAttribute"), function () { return [$asm14.MS.Internal.Xml.Linq.ComponentModel.XTypeDescriptionProvider$b1.Of($asm14.System.Xml.Linq.XElement).__Type__]; })
    .Attribute($asm13.TypeRef("System.Xml.Serialization.XmlSchemaProviderAttribute"), function () { return [null]; });

})();

/* class System.Xml.Linq.XElement/<GetAttributes>d__0 */ 

(function $lGetAttributes$gd__0$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XElement/<GetAttributes>d__0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    )
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      new JSIL.MethodSignature($.Boolean, [], [])
    )
      .Overrides(3, "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XAttribute$g.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XAttribute")]), [], [])
    )
      .Overrides(0, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XAttribute$g.get_Current", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XAttribute"), [], [])
    )
      .Overrides(2, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.IEnumerator"), [], [])
    )
      .Overrides(1, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      new JSIL.MethodSignature($.Object, [], [])
    )
      .Overrides(3, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(3, "Reset")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(4, "Dispose");

    $.Field({Static:false, Public:false}, "$current", $asm14.TypeRef("System.Xml.Linq.XAttribute")); 
    $.Field({Static:false, Public:false}, "$state", $.Int32); 
    $.Field({Static:false, Public:false}, "$initialThreadId", $.Int32); 
    $.Field({Static:false, Public:true }, "$this", $asm14.TypeRef("System.Xml.Linq.XElement")); 
    $.Field({Static:false, Public:true }, "$name", $asm14.TypeRef("System.Xml.Linq.XName")); 
    $.Field({Static:false, Public:true }, "$name", $asm14.TypeRef("System.Xml.Linq.XName")); 
    $.Field({Static:false, Public:true }, "a", $asm14.TypeRef("System.Xml.Linq.XAttribute")); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XAttribute$g.Current", $asm14.TypeRef("System.Xml.Linq.XAttribute"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XAttribute")]), 
      /* 1 */ $asm09.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XAttribute")]), 
      /* 3 */ $asm09.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm09.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* enum System.Xml.Linq.LoadOptions */ 

JSIL.MakeEnum(
  "System.Xml.Linq.LoadOptions", true, {
    None: 0, 
    PreserveWhitespace: 1, 
    SetBaseUri: 2, 
    SetLineInfo: 4
  }, true
);

/* enum System.Xml.Linq.SaveOptions */ 

JSIL.MakeEnum(
  "System.Xml.Linq.SaveOptions", true, {
    None: 0, 
    DisableFormatting: 1, 
    OmitDuplicateNamespaces: 2
  }, true
);

/* enum System.Xml.Linq.ReaderOptions */ 

JSIL.MakeEnum(
  "System.Xml.Linq.ReaderOptions", true, {
    None: 0, 
    OmitDuplicateNamespaces: 1
  }, true
);

/* class System.Xml.Linq.XDocument */ 

(function XDocument$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Xml.Linq.XContainer"), 
      Name: "System.Xml.Linq.XDocument", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.Object])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XDeclaration"), $jsilcore.TypeRef("System.Array", [$.Object])], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Type], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "AddAttribute", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XAttribute")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "AddAttributeSkipNotify", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XAttribute")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CloneNode", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XNode"), [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "DeepEquals", 
      new JSIL.MethodSignature($.Boolean, [$asm14.TypeRef("System.Xml.Linq.XNode")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Declaration", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XDeclaration"), [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_DocumentType", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XDocumentType"), [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NodeType", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.XmlNodeType"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Root", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XElement"), [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetDeepHashCode", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetFirstNode", 
      new JSIL.MethodSignature("!!0", [], ["T"])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsWhitespace", 
      new JSIL.MethodSignature($.Boolean, [$.String], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$.String], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$.String, $asm14.TypeRef("System.Xml.Linq.LoadOptions")], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$asm09.TypeRef("System.IO.Stream")], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$asm09.TypeRef("System.IO.Stream"), $asm14.TypeRef("System.Xml.Linq.LoadOptions")], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$asm09.TypeRef("System.IO.TextReader")], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$asm09.TypeRef("System.IO.TextReader"), $asm14.TypeRef("System.Xml.Linq.LoadOptions")], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$asm13.TypeRef("System.Xml.XmlReader")], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$asm13.TypeRef("System.Xml.XmlReader"), $asm14.TypeRef("System.Xml.Linq.LoadOptions")], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "Parse", 
      new JSIL.MethodSignature($.Type, [$.String], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:true }, "Parse", 
      new JSIL.MethodSignature($.Type, [$.String, $asm14.TypeRef("System.Xml.Linq.LoadOptions")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$.String, $asm14.TypeRef("System.Xml.Linq.SaveOptions")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.IO.Stream")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.IO.Stream"), $asm14.TypeRef("System.Xml.Linq.SaveOptions")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.IO.TextWriter")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.IO.TextWriter"), $asm14.TypeRef("System.Xml.Linq.SaveOptions")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.Xml.XmlWriter")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Declaration", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XDeclaration")], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "ValidateDocument", 
      new JSIL.MethodSignature(null, [
          $asm14.TypeRef("System.Xml.Linq.XNode"), $asm13.TypeRef("System.Xml.XmlNodeType"), 
          $asm13.TypeRef("System.Xml.XmlNodeType")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateNode", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XNode"), $asm14.TypeRef("System.Xml.Linq.XNode")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateString", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteTo", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.Xml.XmlWriter")], [])
    );

    $.Field({Static:false, Public:false}, "declaration", $asm14.TypeRef("System.Xml.Linq.XDeclaration")); 
    $.Property({Static:false, Public:true }, "Declaration", $asm14.TypeRef("System.Xml.Linq.XDeclaration"));

    $.Property({Static:false, Public:true }, "DocumentType", $asm14.TypeRef("System.Xml.Linq.XDocumentType"));

    $.Property({Static:false, Public:true , Virtual:true }, "NodeType", $asm13.TypeRef("System.Xml.XmlNodeType"));

    $.Property({Static:false, Public:true }, "Root", $asm14.TypeRef("System.Xml.Linq.XElement"));

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.XComment */ 

(function XComment$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Xml.Linq.XNode"), 
      Name: "System.Xml.Linq.XComment", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Type], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.Xml.XmlReader")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CloneNode", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XNode"), [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "DeepEquals", 
      new JSIL.MethodSignature($.Boolean, [$asm14.TypeRef("System.Xml.Linq.XNode")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NodeType", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.XmlNodeType"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Value", 
      new JSIL.MethodSignature($.String, [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetDeepHashCode", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Value", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteTo", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.Xml.XmlWriter")], [])
    );

    $.Field({Static:false, Public:false}, "value", $.String); 
    $.Property({Static:false, Public:true , Virtual:true }, "NodeType", $asm13.TypeRef("System.Xml.XmlNodeType"));

    $.Property({Static:false, Public:true }, "Value", $.String);

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.XProcessingInstruction */ 

(function XProcessingInstruction$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Xml.Linq.XNode"), 
      Name: "System.Xml.Linq.XProcessingInstruction", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.String], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Type], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.Xml.XmlReader")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CloneNode", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XNode"), [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "DeepEquals", 
      new JSIL.MethodSignature($.Boolean, [$asm14.TypeRef("System.Xml.Linq.XNode")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Data", 
      new JSIL.MethodSignature($.String, [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NodeType", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.XmlNodeType"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Target", 
      new JSIL.MethodSignature($.String, [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetDeepHashCode", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Data", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Target", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidateName", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteTo", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.Xml.XmlWriter")], [])
    );

    $.Field({Static:false, Public:false}, "target", $.String); 
    $.Field({Static:false, Public:false}, "data", $.String); 
    $.Property({Static:false, Public:true }, "Data", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "NodeType", $asm13.TypeRef("System.Xml.XmlNodeType"));

    $.Property({Static:false, Public:true }, "Target", $.String);

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.XDeclaration */ 

(function XDeclaration$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XDeclaration", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Type], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.Xml.XmlReader")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Encoding", 
      new JSIL.MethodSignature($.String, [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Standalone", 
      new JSIL.MethodSignature($.String, [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Version", 
      new JSIL.MethodSignature($.String, [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "set_Encoding", 
      new JSIL.MethodSignature(null, [$.String], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "set_Standalone", 
      new JSIL.MethodSignature(null, [$.String], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "set_Version", 
      new JSIL.MethodSignature(null, [$.String], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.Field({Static:false, Public:false}, "version", $.String); 
    $.Field({Static:false, Public:false}, "encoding", $.String); 
    $.Field({Static:false, Public:false}, "standalone", $.String); 
    $.Property({Static:false, Public:true }, "Encoding", $.String);

    $.Property({Static:false, Public:true }, "Standalone", $.String);

    $.Property({Static:false, Public:true }, "Version", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.XDocumentType */ 

(function XDocumentType$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Xml.Linq.XNode"), 
      Name: "System.Xml.Linq.XDocumentType", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Type], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.Xml.XmlReader")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $asm13.TypeRef("System.Xml.IDtdInfo")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CloneNode", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XNode"), [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "DeepEquals", 
      new JSIL.MethodSignature($.Boolean, [$asm14.TypeRef("System.Xml.Linq.XNode")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_DtdInfo", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.IDtdInfo"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InternalSubset", 
      new JSIL.MethodSignature($.String, [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      new JSIL.MethodSignature($.String, [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NodeType", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.XmlNodeType"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PublicId", 
      new JSIL.MethodSignature($.String, [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_SystemId", 
      new JSIL.MethodSignature($.String, [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetDeepHashCode", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_InternalSubset", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Name", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_PublicId", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SystemId", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteTo", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.Xml.XmlWriter")], [])
    );

    $.Field({Static:false, Public:false}, "$name", $.String); 
    $.Field({Static:false, Public:false}, "publicId", $.String); 
    $.Field({Static:false, Public:false}, "systemId", $.String); 
    $.Field({Static:false, Public:false}, "internalSubset", $.String); 
    $.Field({Static:false, Public:false}, "dtdInfo", $asm13.TypeRef("System.Xml.IDtdInfo")); 
    $.Property({Static:false, Public:true }, "InternalSubset", $.String);

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "NodeType", $asm13.TypeRef("System.Xml.XmlNodeType"));

    $.Property({Static:false, Public:true }, "PublicId", $.String);

    $.Property({Static:false, Public:true }, "SystemId", $.String);

    $.Property({Static:false, Public:false}, "DtdInfo", $asm13.TypeRef("System.Xml.IDtdInfo"));

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.XAttribute */ 

(function XAttribute$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Xml.Linq.XObject"), 
      Name: "System.Xml.Linq.XAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XName"), $.Object], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Type], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "get_EmptySequence", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type]), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsNamespaceDeclaration", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XName"), [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_NextAttribute", 
      new JSIL.MethodSignature($.Type, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NodeType", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.XmlNodeType"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PreviousAttribute", 
      new JSIL.MethodSignature($.Type, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Value", 
      new JSIL.MethodSignature($.String, [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "GetDeepHashCode", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetPrefixOfNamespace", 
      new JSIL.MethodSignature($.String, [$asm14.TypeRef("System.Xml.Linq.XNamespace")], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.String, [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.Boolean, [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Nullable`1", [$.Boolean]), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.Int32, [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Nullable`1", [$.Int32]), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.UInt32, [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Nullable`1", [$.UInt32]), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.Int64, [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Nullable`1", [$.Int64]), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.UInt64, [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Nullable`1", [$.UInt64]), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.Single, [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Nullable`1", [$.Single]), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.Double, [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Nullable`1", [$.Double]), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Decimal"), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Nullable`1", [$asm09.TypeRef("System.Decimal")]), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.DateTime"), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Nullable`1", [$asm09.TypeRef("System.DateTime")]), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.DateTimeOffset"), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Nullable`1", [$asm09.TypeRef("System.DateTimeOffset")]), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.TimeSpan"), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Nullable`1", [$asm09.TypeRef("System.TimeSpan")]), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Guid"), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Nullable`1", [$asm09.TypeRef("System.Guid")]), [$.Type], [])
    )
      .Attribute($asm09.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; });

    $.ExternalMethod({Static:false, Public:true }, "Remove", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Value", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidateAttribute", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XName"), $.String], [])
    );

    $.Field({Static:true , Public:false}, "emptySequence", $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type])); 
    $.Field({Static:false, Public:false}, "next", $.Type); 
    $.Field({Static:false, Public:false}, "$name", $asm14.TypeRef("System.Xml.Linq.XName")); 
    $.Field({Static:false, Public:false}, "value", $.String); 
    $.Property({Static:true , Public:true }, "EmptySequence", $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type]));

    $.Property({Static:false, Public:true }, "IsNamespaceDeclaration", $.Boolean);

    $.Property({Static:false, Public:true }, "Name", $asm14.TypeRef("System.Xml.Linq.XName"));

    $.Property({Static:false, Public:true }, "NextAttribute", $.Type);

    $.Property({Static:false, Public:true , Virtual:true }, "NodeType", $asm13.TypeRef("System.Xml.XmlNodeType"));

    $.Property({Static:false, Public:true }, "PreviousAttribute", $.Type);

    $.Property({Static:false, Public:true }, "Value", $.String);

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0B.TypeRef("System.ComponentModel.TypeDescriptionProviderAttribute"), function () { return [$asm14.MS.Internal.Xml.Linq.ComponentModel.XTypeDescriptionProvider$b1.Of($asm14.System.Xml.Linq.XAttribute).__Type__]; });

})();

/* class System.Xml.Linq.XStreamingElement */ 

(function XStreamingElement$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XStreamingElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XName")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XName"), $.Object], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XName"), $jsilcore.TypeRef("System.Array", [$.Object])], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      new JSIL.MethodSignature(null, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.Object])], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XName"), [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "GetXmlString", 
      new JSIL.MethodSignature($.String, [$asm14.TypeRef("System.Xml.Linq.SaveOptions")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$.String], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$.String, $asm14.TypeRef("System.Xml.Linq.SaveOptions")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.IO.Stream")], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.IO.Stream"), $asm14.TypeRef("System.Xml.Linq.SaveOptions")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.IO.TextWriter")], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.IO.TextWriter"), $asm14.TypeRef("System.Xml.Linq.SaveOptions")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.Xml.XmlWriter")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Name", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XName")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      new JSIL.MethodSignature($.String, [], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "ToString", 
      new JSIL.MethodSignature($.String, [$asm14.TypeRef("System.Xml.Linq.SaveOptions")], [])
    )
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "WriteTo", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.Xml.XmlWriter")], [])
    );

    $.Field({Static:false, Public:false}, "$name", $asm14.TypeRef("System.Xml.Linq.XName")); 
    $.Field({Static:false, Public:false}, "content", $.Object); 
    $.Property({Static:false, Public:true }, "Name", $asm14.TypeRef("System.Xml.Linq.XName"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.Extensions */ 

(function Extensions$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Xml.Linq.Extensions", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:true }, "Ancestors", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["T"])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Ancestors", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), $asm14.TypeRef("System.Xml.Linq.XName")], ["T"])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "AncestorsAndSelf", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")])], [])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "AncestorsAndSelf", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), $asm14.TypeRef("System.Xml.Linq.XName")], [])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Attributes", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XAttribute")]), [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")])], [])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Attributes", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XAttribute")]), [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), $asm14.TypeRef("System.Xml.Linq.XName")], [])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "DescendantNodes", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XNode")]), [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["T"])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "DescendantNodesAndSelf", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XNode")]), [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")])], [])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Descendants", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["T"])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Descendants", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), $asm14.TypeRef("System.Xml.Linq.XName")], ["T"])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "DescendantsAndSelf", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")])], [])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "DescendantsAndSelf", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), $asm14.TypeRef("System.Xml.Linq.XName")], [])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Elements", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["T"])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Elements", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), $asm14.TypeRef("System.Xml.Linq.XName")], ["T"])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "GetAncestors", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [
          $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), $asm14.TypeRef("System.Xml.Linq.XName"), 
          $.Boolean
        ], ["T"])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetAttributes", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XAttribute")]), [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), $asm14.TypeRef("System.Xml.Linq.XName")], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetDescendantNodes", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XNode")]), [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), $.Boolean], ["T"])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetDescendants", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [
          $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), $asm14.TypeRef("System.Xml.Linq.XName"), 
          $.Boolean
        ], ["T"])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetElements", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), $asm14.TypeRef("System.Xml.Linq.XName")], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "InDocumentOrder", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["T"])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Nodes", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XNode")]), [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["T"])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Remove", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XAttribute")])], [])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Remove", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["T"])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

})();

/* class System.Xml.Linq.Extensions/<Nodes>d__0`1 */ 

(function $lNodes$gd__0$b1$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.Extensions/<Nodes>d__0`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    )
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "$l$gm__Finally4", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      new JSIL.MethodSignature($.Boolean, [], [])
    )
      .Overrides(3, "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XNode$g.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XNode")]), [], [])
    )
      .Overrides(0, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XNode$g.get_Current", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XNode"), [], [])
    )
      .Overrides(2, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.IEnumerator"), [], [])
    )
      .Overrides(1, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"))
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      new JSIL.MethodSignature($.Object, [], [])
    )
      .Overrides(3, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(3, "Reset")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(4, "Dispose");

    $.Field({Static:false, Public:false}, "$current", $asm14.TypeRef("System.Xml.Linq.XNode")); 
    $.Field({Static:false, Public:false}, "$state", $.Int32); 
    $.Field({Static:false, Public:false}, "$initialThreadId", $.Int32); 
    $.Field({Static:false, Public:true }, "source", $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")])); 
    $.Field({Static:false, Public:true }, "$source", $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")])); 
    $.Field({Static:false, Public:true }, "root", $asm14.TypeRef("System.Xml.Linq.XContainer")); 
    $.Field({Static:false, Public:true }, "n", $asm14.TypeRef("System.Xml.Linq.XNode")); 
    $.Field({Static:false, Public:true }, "$wrap3", $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("T")])); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XNode$g.Current", $asm14.TypeRef("System.Xml.Linq.XNode"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XNode")]), 
      /* 1 */ $asm09.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XNode")]), 
      /* 3 */ $asm09.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm09.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.Extensions/<GetAncestors>d__f`1 */ 

(function $lGetAncestors$gd__f$b1$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.Extensions/<GetAncestors>d__f`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    )
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "$l$gm__Finally13", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      new JSIL.MethodSignature($.Boolean, [], [])
    )
      .Overrides(3, "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XElement$g.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [], [])
    )
      .Overrides(0, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.get_Current", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XElement"), [], [])
    )
      .Overrides(2, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.IEnumerator"), [], [])
    )
      .Overrides(1, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"))
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      new JSIL.MethodSignature($.Object, [], [])
    )
      .Overrides(3, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(3, "Reset")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(4, "Dispose");

    $.Field({Static:false, Public:false}, "$current", $asm14.TypeRef("System.Xml.Linq.XElement")); 
    $.Field({Static:false, Public:false}, "$state", $.Int32); 
    $.Field({Static:false, Public:false}, "$initialThreadId", $.Int32); 
    $.Field({Static:false, Public:true }, "source", $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")])); 
    $.Field({Static:false, Public:true }, "$source", $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")])); 
    $.Field({Static:false, Public:true }, "$name", $asm14.TypeRef("System.Xml.Linq.XName")); 
    $.Field({Static:false, Public:true }, "$name", $asm14.TypeRef("System.Xml.Linq.XName")); 
    $.Field({Static:false, Public:true }, "self", $.Boolean); 
    $.Field({Static:false, Public:true }, "$self", $.Boolean); 
    $.Field({Static:false, Public:true }, "node", $asm14.TypeRef("System.Xml.Linq.XNode")); 
    $.Field({Static:false, Public:true }, "e", $asm14.TypeRef("System.Xml.Linq.XElement")); 
    $.Field({Static:false, Public:true }, "$wrap12", $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("T")])); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.Current", $asm14.TypeRef("System.Xml.Linq.XElement"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), 
      /* 1 */ $asm09.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), 
      /* 3 */ $asm09.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm09.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.Extensions/<GetDescendantNodes>d__16`1 */ 

(function $lGetDescendantNodes$gd__16$b1$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.Extensions/<GetDescendantNodes>d__16`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    )
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "$l$gm__Finally1c", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      new JSIL.MethodSignature($.Boolean, [], [])
    )
      .Overrides(3, "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XNode$g.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XNode")]), [], [])
    )
      .Overrides(0, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XNode$g.get_Current", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XNode"), [], [])
    )
      .Overrides(2, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.IEnumerator"), [], [])
    )
      .Overrides(1, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"))
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      new JSIL.MethodSignature($.Object, [], [])
    )
      .Overrides(3, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(3, "Reset")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(4, "Dispose");

    $.Field({Static:false, Public:false}, "$current", $asm14.TypeRef("System.Xml.Linq.XNode")); 
    $.Field({Static:false, Public:false}, "$state", $.Int32); 
    $.Field({Static:false, Public:false}, "$initialThreadId", $.Int32); 
    $.Field({Static:false, Public:true }, "source", $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")])); 
    $.Field({Static:false, Public:true }, "$source", $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")])); 
    $.Field({Static:false, Public:true }, "self", $.Boolean); 
    $.Field({Static:false, Public:true }, "$self", $.Boolean); 
    $.Field({Static:false, Public:true }, "root", $asm14.TypeRef("System.Xml.Linq.XContainer")); 
    $.Field({Static:false, Public:true }, "n", $asm14.TypeRef("System.Xml.Linq.XNode")); 
    $.Field({Static:false, Public:true }, "c", $asm14.TypeRef("System.Xml.Linq.XContainer")); 
    $.Field({Static:false, Public:true }, "first$1a", $asm14.TypeRef("System.Xml.Linq.XNode")); 
    $.Field({Static:false, Public:true }, "$wrap1b", $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("T")])); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XNode$g.Current", $asm14.TypeRef("System.Xml.Linq.XNode"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XNode")]), 
      /* 1 */ $asm09.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XNode")]), 
      /* 3 */ $asm09.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm09.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.Extensions/<GetDescendants>d__1f`1 */ 

(function $lGetDescendants$gd__1f$b1$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.Extensions/<GetDescendants>d__1f`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    )
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "$l$gm__Finally26", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      new JSIL.MethodSignature($.Boolean, [], [])
    )
      .Overrides(3, "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XElement$g.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [], [])
    )
      .Overrides(0, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.get_Current", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XElement"), [], [])
    )
      .Overrides(2, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.IEnumerator"), [], [])
    )
      .Overrides(1, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"))
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      new JSIL.MethodSignature($.Object, [], [])
    )
      .Overrides(3, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(3, "Reset")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(4, "Dispose");

    $.Field({Static:false, Public:false}, "$current", $asm14.TypeRef("System.Xml.Linq.XElement")); 
    $.Field({Static:false, Public:false}, "$state", $.Int32); 
    $.Field({Static:false, Public:false}, "$initialThreadId", $.Int32); 
    $.Field({Static:false, Public:true }, "source", $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")])); 
    $.Field({Static:false, Public:true }, "$source", $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")])); 
    $.Field({Static:false, Public:true }, "$name", $asm14.TypeRef("System.Xml.Linq.XName")); 
    $.Field({Static:false, Public:true }, "$name", $asm14.TypeRef("System.Xml.Linq.XName")); 
    $.Field({Static:false, Public:true }, "self", $.Boolean); 
    $.Field({Static:false, Public:true }, "$self", $.Boolean); 
    $.Field({Static:false, Public:true }, "root", $asm14.TypeRef("System.Xml.Linq.XContainer")); 
    $.Field({Static:false, Public:true }, "e", $asm14.TypeRef("System.Xml.Linq.XElement")); 
    $.Field({Static:false, Public:true }, "n", $asm14.TypeRef("System.Xml.Linq.XNode")); 
    $.Field({Static:false, Public:true }, "c", $asm14.TypeRef("System.Xml.Linq.XContainer")); 
    $.Field({Static:false, Public:true }, "e", $asm14.TypeRef("System.Xml.Linq.XElement")); 
    $.Field({Static:false, Public:true }, "$wrap25", $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("T")])); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.Current", $asm14.TypeRef("System.Xml.Linq.XElement"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), 
      /* 1 */ $asm09.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), 
      /* 3 */ $asm09.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm09.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.Extensions/<GetElements>d__29`1 */ 

(function $lGetElements$gd__29$b1$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.Extensions/<GetElements>d__29`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    )
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "$l$gm__Finally2e", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      new JSIL.MethodSignature($.Boolean, [], [])
    )
      .Overrides(3, "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XElement$g.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [], [])
    )
      .Overrides(0, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.get_Current", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XElement"), [], [])
    )
      .Overrides(2, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.IEnumerator"), [], [])
    )
      .Overrides(1, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"))
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      new JSIL.MethodSignature($.Object, [], [])
    )
      .Overrides(3, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(3, "Reset")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(4, "Dispose");

    $.Field({Static:false, Public:false}, "$current", $asm14.TypeRef("System.Xml.Linq.XElement")); 
    $.Field({Static:false, Public:false}, "$state", $.Int32); 
    $.Field({Static:false, Public:false}, "$initialThreadId", $.Int32); 
    $.Field({Static:false, Public:true }, "source", $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")])); 
    $.Field({Static:false, Public:true }, "$source", $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")])); 
    $.Field({Static:false, Public:true }, "$name", $asm14.TypeRef("System.Xml.Linq.XName")); 
    $.Field({Static:false, Public:true }, "$name", $asm14.TypeRef("System.Xml.Linq.XName")); 
    $.Field({Static:false, Public:true }, "root$2a", $asm14.TypeRef("System.Xml.Linq.XContainer")); 
    $.Field({Static:false, Public:true }, "n$2b", $asm14.TypeRef("System.Xml.Linq.XNode")); 
    $.Field({Static:false, Public:true }, "e$2c", $asm14.TypeRef("System.Xml.Linq.XElement")); 
    $.Field({Static:false, Public:true }, "$wrap2d", $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("T")])); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.Current", $asm14.TypeRef("System.Xml.Linq.XElement"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), 
      /* 1 */ $asm09.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), 
      /* 3 */ $asm09.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm09.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.Extensions/<GetAttributes>d__8 */ 

(function $lGetAttributes$gd__8$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.Extensions/<GetAttributes>d__8", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    )
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "$l$gm__Finallyc", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      new JSIL.MethodSignature($.Boolean, [], [])
    )
      .Overrides(3, "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XAttribute$g.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XAttribute")]), [], [])
    )
      .Overrides(0, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XAttribute$g.get_Current", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XAttribute"), [], [])
    )
      .Overrides(2, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.IEnumerator"), [], [])
    )
      .Overrides(1, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      new JSIL.MethodSignature($.Object, [], [])
    )
      .Overrides(3, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(3, "Reset")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(4, "Dispose");

    $.Field({Static:false, Public:false}, "$current", $asm14.TypeRef("System.Xml.Linq.XAttribute")); 
    $.Field({Static:false, Public:false}, "$state", $.Int32); 
    $.Field({Static:false, Public:false}, "$initialThreadId", $.Int32); 
    $.Field({Static:false, Public:true }, "source", $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")])); 
    $.Field({Static:false, Public:true }, "$source", $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")])); 
    $.Field({Static:false, Public:true }, "$name", $asm14.TypeRef("System.Xml.Linq.XName")); 
    $.Field({Static:false, Public:true }, "$name", $asm14.TypeRef("System.Xml.Linq.XName")); 
    $.Field({Static:false, Public:true }, "e", $asm14.TypeRef("System.Xml.Linq.XElement")); 
    $.Field({Static:false, Public:true }, "a$a", $asm14.TypeRef("System.Xml.Linq.XAttribute")); 
    $.Field({Static:false, Public:true }, "$wrapb", $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XElement")])); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XAttribute$g.Current", $asm14.TypeRef("System.Xml.Linq.XAttribute"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XAttribute")]), 
      /* 1 */ $asm09.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm14.TypeRef("System.Xml.Linq.XAttribute")]), 
      /* 3 */ $asm09.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm09.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.Xml.XPath");
/* class System.Xml.XPath.Extensions */ 

(function Extensions$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Xml.XPath.Extensions", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "CalibrateText", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XText"), [$asm14.TypeRef("System.Xml.Linq.XText")], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateNavigator", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.XPath.XPathNavigator"), [$asm14.TypeRef("System.Xml.Linq.XNode")], [])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"))
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:true }, "CreateNavigator", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.XPath.XPathNavigator"), [$asm14.TypeRef("System.Xml.Linq.XNode"), $asm13.TypeRef("System.Xml.XmlNameTable")], [])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "XPathEvaluate", 
      new JSIL.MethodSignature($.Object, [$asm14.TypeRef("System.Xml.Linq.XNode"), $.String], [])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"))
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:true }, "XPathEvaluate", 
      new JSIL.MethodSignature($.Object, [
          $asm14.TypeRef("System.Xml.Linq.XNode"), $.String, 
          $asm13.TypeRef("System.Xml.IXmlNamespaceResolver")
        ], [])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "XPathSelectElement", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XElement"), [$asm14.TypeRef("System.Xml.Linq.XNode"), $.String], [])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"))
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:true }, "XPathSelectElement", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XElement"), [
          $asm14.TypeRef("System.Xml.Linq.XNode"), $.String, 
          $asm13.TypeRef("System.Xml.IXmlNamespaceResolver")
        ], [])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "XPathSelectElements", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [$asm14.TypeRef("System.Xml.Linq.XNode"), $.String], [])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"))
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:true }, "XPathSelectElements", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")]), [
          $asm14.TypeRef("System.Xml.Linq.XNode"), $.String, 
          $asm13.TypeRef("System.Xml.IXmlNamespaceResolver")
        ], [])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

})();

JSIL.DeclareNamespace("System.Xml.Schema");
/* class System.Xml.Schema.Extensions */ 

(function Extensions$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Xml.Schema.Extensions", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:true }, "GetSchemaInfo", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.Schema.IXmlSchemaInfo"), [$asm14.TypeRef("System.Xml.Linq.XElement")], [])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "GetSchemaInfo", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.Schema.IXmlSchemaInfo"), [$asm14.TypeRef("System.Xml.Linq.XAttribute")], [])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Validate", 
      new JSIL.MethodSignature(null, [
          $asm14.TypeRef("System.Xml.Linq.XDocument"), $asm13.TypeRef("System.Xml.Schema.XmlSchemaSet"), 
          $asm13.TypeRef("System.Xml.Schema.ValidationEventHandler")
        ], [])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"))
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:true }, "Validate", 
      new JSIL.MethodSignature(null, [
          $asm14.TypeRef("System.Xml.Linq.XDocument"), $asm13.TypeRef("System.Xml.Schema.XmlSchemaSet"), 
          $asm13.TypeRef("System.Xml.Schema.ValidationEventHandler"), $.Boolean
        ], [])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Validate", 
      new JSIL.MethodSignature(null, [
          $asm14.TypeRef("System.Xml.Linq.XElement"), $asm13.TypeRef("System.Xml.Schema.XmlSchemaObject"), 
          $asm13.TypeRef("System.Xml.Schema.XmlSchemaSet"), $asm13.TypeRef("System.Xml.Schema.ValidationEventHandler")
        ], [])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"))
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:true }, "Validate", 
      new JSIL.MethodSignature(null, [
          $asm14.TypeRef("System.Xml.Linq.XElement"), $asm13.TypeRef("System.Xml.Schema.XmlSchemaObject"), 
          $asm13.TypeRef("System.Xml.Schema.XmlSchemaSet"), $asm13.TypeRef("System.Xml.Schema.ValidationEventHandler"), 
          $.Boolean
        ], [])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Validate", 
      new JSIL.MethodSignature(null, [
          $asm14.TypeRef("System.Xml.Linq.XAttribute"), $asm13.TypeRef("System.Xml.Schema.XmlSchemaObject"), 
          $asm13.TypeRef("System.Xml.Schema.XmlSchemaSet"), $asm13.TypeRef("System.Xml.Schema.ValidationEventHandler")
        ], [])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"))
      .Attribute($asm09.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:true }, "Validate", 
      new JSIL.MethodSignature(null, [
          $asm14.TypeRef("System.Xml.Linq.XAttribute"), $asm13.TypeRef("System.Xml.Schema.XmlSchemaObject"), 
          $asm13.TypeRef("System.Xml.Schema.XmlSchemaSet"), $asm13.TypeRef("System.Xml.Schema.ValidationEventHandler"), 
          $.Boolean
        ], [])
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

})();

JSIL.DeclareNamespace("MS");
JSIL.DeclareNamespace("MS.Internal");
JSIL.DeclareNamespace("MS.Internal.Xml");
JSIL.DeclareNamespace("MS.Internal.Xml.Linq");
JSIL.DeclareNamespace("MS.Internal.Xml.Linq.ComponentModel");
/* class MS.Internal.Xml.Linq.ComponentModel.XTypeDescriptionProvider`1 */ 

(function XTypeDescriptionProvider$b1$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.ComponentModel.TypeDescriptionProvider"), 
      Name: "MS.Internal.Xml.Linq.ComponentModel.XTypeDescriptionProvider`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetTypeDescriptor", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.ComponentModel.ICustomTypeDescriptor"), [$asm09.TypeRef("System.Type"), $.Object], [])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class MS.Internal.Xml.Linq.ComponentModel.XTypeDescriptor`1 */ 

(function XTypeDescriptor$b1$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.ComponentModel.CustomTypeDescriptor"), 
      Name: "MS.Internal.Xml.Linq.ComponentModel.XTypeDescriptor`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.ComponentModel.ICustomTypeDescriptor")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetProperties", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.ComponentModel.PropertyDescriptorCollection"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetProperties", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.ComponentModel.PropertyDescriptorCollection"), [$jsilcore.TypeRef("System.Array", [$asm09.TypeRef("System.Attribute")])], [])
    );

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class MS.Internal.Xml.Linq.ComponentModel.XPropertyDescriptor`2 */ 

(function XPropertyDescriptor$b2$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.ComponentModel.PropertyDescriptor"), 
      Name: "MS.Internal.Xml.Linq.ComponentModel.XPropertyDescriptor`2", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T", "TProperty"], 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddValueChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm09.TypeRef("System.EventHandler")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanResetValue", 
      new JSIL.MethodSignature($.Boolean, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ComponentType", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Type"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsReadOnly", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_PropertyType", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Type"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_SupportsChangeEvents", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm14.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanging", 
      new JSIL.MethodSignature(null, [$.Object, $asm14.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "RemoveValueChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm09.TypeRef("System.EventHandler")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ResetValue", 
      new JSIL.MethodSignature(null, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$.Object, $.Object], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ShouldSerializeValue", 
      new JSIL.MethodSignature($.Boolean, [$.Object], [])
    );

    $.Property({Static:false, Public:true , Virtual:true }, "ComponentType", $asm09.TypeRef("System.Type"));

    $.Property({Static:false, Public:true , Virtual:true }, "IsReadOnly", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "PropertyType", $asm09.TypeRef("System.Type"));

    $.Property({Static:false, Public:true , Virtual:true }, "SupportsChangeEvents", $.Boolean);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class MS.Internal.Xml.Linq.ComponentModel.XElementAttributePropertyDescriptor */ 

(function XElementAttributePropertyDescriptor$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm14.TypeRef("MS.Internal.Xml.Linq.ComponentModel.XPropertyDescriptor`2", [$asm14.TypeRef("System.Xml.Linq.XElement"), $asm09.TypeRef("System.Object")]), 
      Name: "MS.Internal.Xml.Linq.ComponentModel.XElementAttributePropertyDescriptor", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm14.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanging", 
      new JSIL.MethodSignature(null, [$.Object, $asm14.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")], [])
    );

    $.Field({Static:false, Public:false}, "value", $asm14.TypeRef("MS.Internal.Xml.Linq.ComponentModel.XDeferredSingleton`1", [$asm14.TypeRef("System.Xml.Linq.XAttribute")])); 
    $.Field({Static:false, Public:false}, "changeState", $asm14.TypeRef("System.Xml.Linq.XAttribute")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class MS.Internal.Xml.Linq.ComponentModel.XElementDescendantsPropertyDescriptor */ 

(function XElementDescendantsPropertyDescriptor$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm14.TypeRef("MS.Internal.Xml.Linq.ComponentModel.XPropertyDescriptor`2", [$asm14.TypeRef("System.Xml.Linq.XElement"), $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")])]), 
      Name: "MS.Internal.Xml.Linq.ComponentModel.XElementDescendantsPropertyDescriptor", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm14.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanging", 
      new JSIL.MethodSignature(null, [$.Object, $asm14.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")], [])
    );

    $.Field({Static:false, Public:false}, "value", $asm14.TypeRef("MS.Internal.Xml.Linq.ComponentModel.XDeferredAxis`1", [$asm14.TypeRef("System.Xml.Linq.XElement")])); 
    $.Field({Static:false, Public:false}, "changeState", $asm14.TypeRef("System.Xml.Linq.XName")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class MS.Internal.Xml.Linq.ComponentModel.XElementElementPropertyDescriptor */ 

(function XElementElementPropertyDescriptor$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm14.TypeRef("MS.Internal.Xml.Linq.ComponentModel.XPropertyDescriptor`2", [$asm14.TypeRef("System.Xml.Linq.XElement"), $asm09.TypeRef("System.Object")]), 
      Name: "MS.Internal.Xml.Linq.ComponentModel.XElementElementPropertyDescriptor", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm14.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanging", 
      new JSIL.MethodSignature(null, [$.Object, $asm14.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")], [])
    );

    $.Field({Static:false, Public:false}, "value", $asm14.TypeRef("MS.Internal.Xml.Linq.ComponentModel.XDeferredSingleton`1", [$asm14.TypeRef("System.Xml.Linq.XElement")])); 
    $.Field({Static:false, Public:false}, "changeState", $asm14.TypeRef("System.Xml.Linq.XElement")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class MS.Internal.Xml.Linq.ComponentModel.XElementElementsPropertyDescriptor */ 

(function XElementElementsPropertyDescriptor$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm14.TypeRef("MS.Internal.Xml.Linq.ComponentModel.XPropertyDescriptor`2", [$asm14.TypeRef("System.Xml.Linq.XElement"), $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm14.TypeRef("System.Xml.Linq.XElement")])]), 
      Name: "MS.Internal.Xml.Linq.ComponentModel.XElementElementsPropertyDescriptor", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm14.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanging", 
      new JSIL.MethodSignature(null, [$.Object, $asm14.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")], [])
    );

    $.Field({Static:false, Public:false}, "value", $asm14.TypeRef("MS.Internal.Xml.Linq.ComponentModel.XDeferredAxis`1", [$asm14.TypeRef("System.Xml.Linq.XElement")])); 
    $.Field({Static:false, Public:false}, "changeState", $.Object); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class MS.Internal.Xml.Linq.ComponentModel.XElementValuePropertyDescriptor */ 

(function XElementValuePropertyDescriptor$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm14.TypeRef("MS.Internal.Xml.Linq.ComponentModel.XPropertyDescriptor`2", [$asm14.TypeRef("System.Xml.Linq.XElement"), $asm09.TypeRef("System.String")]), 
      Name: "MS.Internal.Xml.Linq.ComponentModel.XElementValuePropertyDescriptor", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsReadOnly", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm14.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$.Object, $.Object], [])
    );

    $.Field({Static:false, Public:false}, "element", $asm14.TypeRef("System.Xml.Linq.XElement")); 
    $.Property({Static:false, Public:true , Virtual:true }, "IsReadOnly", $.Boolean);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class MS.Internal.Xml.Linq.ComponentModel.XElementXmlPropertyDescriptor */ 

(function XElementXmlPropertyDescriptor$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm14.TypeRef("MS.Internal.Xml.Linq.ComponentModel.XPropertyDescriptor`2", [$asm14.TypeRef("System.Xml.Linq.XElement"), $asm09.TypeRef("System.String")]), 
      Name: "MS.Internal.Xml.Linq.ComponentModel.XElementXmlPropertyDescriptor", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm14.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")], [])
    );

    $.Field({Static:false, Public:false}, "element", $asm14.TypeRef("System.Xml.Linq.XElement")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class MS.Internal.Xml.Linq.ComponentModel.XAttributeValuePropertyDescriptor */ 

(function XAttributeValuePropertyDescriptor$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm14.TypeRef("MS.Internal.Xml.Linq.ComponentModel.XPropertyDescriptor`2", [$asm14.TypeRef("System.Xml.Linq.XAttribute"), $asm09.TypeRef("System.String")]), 
      Name: "MS.Internal.Xml.Linq.ComponentModel.XAttributeValuePropertyDescriptor", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsReadOnly", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm14.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$.Object, $.Object], [])
    );

    $.Field({Static:false, Public:false}, "attribute", $asm14.TypeRef("System.Xml.Linq.XAttribute")); 
    $.Property({Static:false, Public:true , Virtual:true }, "IsReadOnly", $.Boolean);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class MS.Internal.Xml.Linq.ComponentModel.XDeferredAxis`1 */ 

(function XDeferredAxis$b1$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "MS.Internal.Xml.Linq.ComponentModel.XDeferredAxis`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm09.TypeRef("System.Func`3", [
              $asm14.TypeRef("System.Xml.Linq.XElement"), $asm14.TypeRef("System.Xml.Linq.XName"), 
              $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [new JSIL.GenericParameter("T", "MS.Internal.Xml.Linq.ComponentModel.XDeferredAxis`1")])
            ]), $asm14.TypeRef("System.Xml.Linq.XElement"), 
          $asm14.TypeRef("System.Xml.Linq.XName")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [new JSIL.GenericParameter("T", "MS.Internal.Xml.Linq.ComponentModel.XDeferredAxis`1")]), [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [new JSIL.GenericParameter("T", "MS.Internal.Xml.Linq.ComponentModel.XDeferredAxis`1")]), [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.IEnumerator"), [], [])
    )
      .Overrides(1, "GetEnumerator");

    $.Field({Static:false, Public:false}, "func", $asm09.TypeRef("System.Func`3", [
          $asm14.TypeRef("System.Xml.Linq.XElement"), $asm14.TypeRef("System.Xml.Linq.XName"), 
          $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")])
        ])); 
    $.Field({Static:false, Public:false}, "element", $asm14.TypeRef("System.Xml.Linq.XElement")); 
    $.Field({Static:false, Public:false}, "$name", $asm14.TypeRef("System.Xml.Linq.XName")); 
    $.Property({Static:false, Public:true }, "Item", $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [new JSIL.GenericParameter("T", "MS.Internal.Xml.Linq.ComponentModel.XDeferredAxis`1")]));

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [new JSIL.GenericParameter("T", "MS.Internal.Xml.Linq.ComponentModel.XDeferredAxis`1")]), 
      /* 1 */ $asm09.TypeRef("System.Collections.IEnumerable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class MS.Internal.Xml.Linq.ComponentModel.XDeferredSingleton`1 */ 

(function XDeferredSingleton$b1$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "MS.Internal.Xml.Linq.ComponentModel.XDeferredSingleton`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm09.TypeRef("System.Func`3", [
              $asm14.TypeRef("System.Xml.Linq.XElement"), $asm14.TypeRef("System.Xml.Linq.XName"), 
              new JSIL.GenericParameter("T", "MS.Internal.Xml.Linq.ComponentModel.XDeferredSingleton`1")
            ]), $asm14.TypeRef("System.Xml.Linq.XElement"), 
          $asm14.TypeRef("System.Xml.Linq.XName")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature(new JSIL.GenericParameter("T", "MS.Internal.Xml.Linq.ComponentModel.XDeferredSingleton`1"), [$.String], [])
    );

    $.Field({Static:false, Public:false}, "func", $asm09.TypeRef("System.Func`3", [
          $asm14.TypeRef("System.Xml.Linq.XElement"), $asm14.TypeRef("System.Xml.Linq.XName"), 
          $.GenericParameter("T")
        ])); 
    $.Field({Static:false, Public:false}, "element", $asm14.TypeRef("System.Xml.Linq.XElement")); 
    $.Field({Static:false, Public:false}, "$name", $asm14.TypeRef("System.Xml.Linq.XName")); 
    $.Property({Static:false, Public:true }, "Item", new JSIL.GenericParameter("T", "MS.Internal.Xml.Linq.ComponentModel.XDeferredSingleton`1"));

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class System.Xml.Linq.NameSerializer */ 

(function NameSerializer$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.NameSerializer", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm09.TypeRef("System.Runtime.Serialization.StreamingContext")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Runtime.Serialization.IObjectReference.GetRealObject", 
      new JSIL.MethodSignature($.Object, [$asm09.TypeRef("System.Runtime.Serialization.StreamingContext")], [])
    )
      .Overrides(0, "GetRealObject");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Runtime.Serialization.ISerializable.GetObjectData", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm09.TypeRef("System.Runtime.Serialization.StreamingContext")], [])
    )
      .Overrides(1, "GetObjectData");

    $.Field({Static:false, Public:false}, "expandedName", $.String); 
    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Runtime.Serialization.IObjectReference"), 
      /* 1 */ $asm09.TypeRef("System.Runtime.Serialization.ISerializable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.BaseUriAnnotation */ 

(function BaseUriAnnotation$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.BaseUriAnnotation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.Field({Static:false, Public:false}, "baseUri", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.LineInfoAnnotation */ 

(function LineInfoAnnotation$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.LineInfoAnnotation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32], [])
    );

    $.Field({Static:false, Public:false}, "lineNumber", $.Int32); 
    $.Field({Static:false, Public:false}, "linePosition", $.Int32); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.LineInfoEndElementAnnotation */ 

(function LineInfoEndElementAnnotation$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Xml.Linq.LineInfoAnnotation"), 
      Name: "System.Xml.Linq.LineInfoEndElementAnnotation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32], [])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.XObjectChangeAnnotation */ 

(function XObjectChangeAnnotation$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XObjectChangeAnnotation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.Field({Static:false, Public:false}, "changing", $asm09.TypeRef("System.EventHandler`1", [$asm14.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")])); 
    $.Field({Static:false, Public:false}, "changed", $asm09.TypeRef("System.EventHandler`1", [$asm14.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")])); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Xml.Linq.Inserter */ 

(function Inserter$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.ValueType"), 
      Name: "System.Xml.Linq.Inserter", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XContainer"), $asm14.TypeRef("System.Xml.Linq.XNode")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      new JSIL.MethodSignature(null, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddContent", 
      new JSIL.MethodSignature(null, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddNode", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XNode")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddString", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "InsertNode", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XNode")], [])
    );

    $.Field({Static:false, Public:false}, "parent", $asm14.TypeRef("System.Xml.Linq.XContainer")); 
    $.Field({Static:false, Public:false}, "previous", $asm14.TypeRef("System.Xml.Linq.XNode")); 
    $.Field({Static:false, Public:false}, "text", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Xml.Linq.NamespaceCache */ 

(function NamespaceCache$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.ValueType"), 
      Name: "System.Xml.Linq.NamespaceCache", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, "Get", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XNamespace"), [$.String], [])
    );

    $.Field({Static:false, Public:false}, "ns", $asm14.TypeRef("System.Xml.Linq.XNamespace")); 
    $.Field({Static:false, Public:false}, "namespaceName", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Xml.Linq.ElementWriter */ 

(function ElementWriter$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.ValueType"), 
      Name: "System.Xml.Linq.ElementWriter", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.Xml.XmlWriter")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetPrefixOfNamespace", 
      new JSIL.MethodSignature($.String, [$asm14.TypeRef("System.Xml.Linq.XNamespace"), $.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "PushAncestors", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XElement")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "PushElement", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XElement")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "WriteElement", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XElement")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteEndElement", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteFullEndElement", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteStartElement", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XElement")], [])
    );

    $.Field({Static:false, Public:false}, "writer", $asm13.TypeRef("System.Xml.XmlWriter")); 
    $.Field({Static:false, Public:false}, "resolver", $asm14.TypeRef("System.Xml.Linq.NamespaceResolver")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Xml.Linq.NamespaceResolver */ 

(function NamespaceResolver$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.ValueType"), 
      Name: "System.Xml.Linq.NamespaceResolver", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      new JSIL.MethodSignature(null, [$.String, $asm14.TypeRef("System.Xml.Linq.XNamespace")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddFirst", 
      new JSIL.MethodSignature(null, [$.String, $asm14.TypeRef("System.Xml.Linq.XNamespace")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetPrefixOfNamespace", 
      new JSIL.MethodSignature($.String, [$asm14.TypeRef("System.Xml.Linq.XNamespace"), $.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "PopScope", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "PushScope", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.Field({Static:false, Public:false}, "scope", $.Int32); 
    $.Field({Static:false, Public:false}, "declaration", $asm14.TypeRef("System.Xml.Linq.NamespaceResolver/NamespaceDeclaration")); 
    $.Field({Static:false, Public:false}, "rover", $asm14.TypeRef("System.Xml.Linq.NamespaceResolver/NamespaceDeclaration")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.NamespaceResolver/NamespaceDeclaration */ 

(function NamespaceDeclaration$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.NamespaceResolver/NamespaceDeclaration", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.Field({Static:false, Public:true }, "prefix", $.String); 
    $.Field({Static:false, Public:true }, "ns", $asm14.TypeRef("System.Xml.Linq.XNamespace")); 
    $.Field({Static:false, Public:true }, "scope", $.Int32); 
    $.Field({Static:false, Public:true }, "prev", $.Type); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Xml.Linq.StreamingElementWriter */ 

(function StreamingElementWriter$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.ValueType"), 
      Name: "System.Xml.Linq.StreamingElementWriter", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.Xml.XmlWriter")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "FlushElement", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetPrefixOfNamespace", 
      new JSIL.MethodSignature($.String, [$asm14.TypeRef("System.Xml.Linq.XNamespace"), $.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "PushElement", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "Write", 
      new JSIL.MethodSignature(null, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteAttribute", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XAttribute")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteNode", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XNode")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteStreamingElement", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XStreamingElement")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteString", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.Field({Static:false, Public:false}, "writer", $asm13.TypeRef("System.Xml.XmlWriter")); 
    $.Field({Static:false, Public:false}, "element", $asm14.TypeRef("System.Xml.Linq.XStreamingElement")); 
    $.Field({Static:false, Public:false}, "attributes", $asm09.TypeRef("System.Collections.Generic.List`1", [$asm14.TypeRef("System.Xml.Linq.XAttribute")])); 
    $.Field({Static:false, Public:false}, "resolver", $asm14.TypeRef("System.Xml.Linq.NamespaceResolver")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.XNodeBuilder */ 

(function XNodeBuilder$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.Xml.XmlWriter"), 
      Name: "System.Xml.Linq.XNodeBuilder", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XContainer")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "Add", 
      new JSIL.MethodSignature(null, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddNode", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XNode")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddString", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Close", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Flush", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Settings", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.XmlWriterSettings"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_WriteState", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.WriteState"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "LookupPrefix", 
      new JSIL.MethodSignature($.String, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteBase64", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteCData", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteCharEntity", 
      new JSIL.MethodSignature(null, [$.Char], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteChars", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Char]), $.Int32, 
          $.Int32
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteComment", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteDocType", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteEndAttribute", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteEndDocument", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteEndElement", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteEntityRef", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteFullEndElement", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteProcessingInstruction", 
      new JSIL.MethodSignature(null, [$.String, $.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteRaw", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Char]), $.Int32, 
          $.Int32
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteRaw", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteStartAttribute", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteStartDocument", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteStartDocument", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteStartElement", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteString", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteSurrogateCharEntity", 
      new JSIL.MethodSignature(null, [$.Char, $.Char], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteWhitespace", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.Field({Static:false, Public:false}, "content", $asm09.TypeRef("System.Collections.Generic.List`1", [$.Object])); 
    $.Field({Static:false, Public:false}, "parent", $asm14.TypeRef("System.Xml.Linq.XContainer")); 
    $.Field({Static:false, Public:false}, "attrName", $asm14.TypeRef("System.Xml.Linq.XName")); 
    $.Field({Static:false, Public:false}, "attrValue", $.String); 
    $.Field({Static:false, Public:false}, "root", $asm14.TypeRef("System.Xml.Linq.XContainer")); 
    $.Property({Static:false, Public:true , Virtual:true }, "Settings", $asm13.TypeRef("System.Xml.XmlWriterSettings"));

    $.Property({Static:false, Public:true , Virtual:true }, "WriteState", $asm13.TypeRef("System.Xml.WriteState"));

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.XNodeReader */ 

(function XNodeReader$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.Xml.XmlReader"), 
      Name: "System.Xml.Linq.XNodeReader", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm14.TypeRef("System.Xml.Linq.XNode"), $asm13.TypeRef("System.Xml.XmlNameTable"), 
          $asm14.TypeRef("System.Xml.Linq.ReaderOptions")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XNode"), $asm13.TypeRef("System.Xml.XmlNameTable")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Close", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateNameTable", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.XmlNameTable"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_AttributeCount", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_BaseURI", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Depth", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_DtdInfo", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.IDtdInfo"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_EOF", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_HasAttributes", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_HasValue", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsEmptyElement", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsEndElement", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsInteractive", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LocalName", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Name", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NamespaceURI", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NameTable", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.XmlNameTable"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NodeType", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.XmlNodeType"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Prefix", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ReadState", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.ReadState"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Settings", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.XmlReaderSettings"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Value", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_XmlLang", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_XmlSpace", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.XmlSpace"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetAttribute", 
      new JSIL.MethodSignature($.String, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetAttribute", 
      new JSIL.MethodSignature($.String, [$.String, $.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetAttribute", 
      new JSIL.MethodSignature($.String, [$.Int32], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetDepth", 
      new JSIL.MethodSignature($.Int32, [$asm14.TypeRef("System.Xml.Linq.XObject")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetElementInAttributeScope", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XElement"), [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetElementInScope", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XElement"), [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetFirstNonDuplicateNamespaceAttribute", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XAttribute"), [$asm14.TypeRef("System.Xml.Linq.XAttribute")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetLocalName", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetNameInAttributeScope", 
      new JSIL.MethodSignature(null, [
          $.String, $asm14.TypeRef("System.Xml.Linq.XElement"), 
          $jsilcore.TypeRef("JSIL.Reference", [$.String]), $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetNamespaceURI", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetPrefix", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsDuplicateNamespaceAttribute", 
      new JSIL.MethodSignature($.Boolean, [$asm14.TypeRef("System.Xml.Linq.XAttribute")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsDuplicateNamespaceAttributeInner", 
      new JSIL.MethodSignature($.Boolean, [$asm14.TypeRef("System.Xml.Linq.XAttribute")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "LookupNamespace", 
      new JSIL.MethodSignature($.String, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToAttribute", 
      new JSIL.MethodSignature($.Boolean, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToAttribute", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToAttribute", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToElement", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToFirstAttribute", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToNextAttribute", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Read", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "Read", 
      new JSIL.MethodSignature($.Boolean, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadAttributeValue", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadIntoAttribute", 
      new JSIL.MethodSignature($.Boolean, [$asm14.TypeRef("System.Xml.Linq.XAttribute")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadIntoDocument", 
      new JSIL.MethodSignature($.Boolean, [$asm14.TypeRef("System.Xml.Linq.XDocument")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadIntoElement", 
      new JSIL.MethodSignature($.Boolean, [$asm14.TypeRef("System.Xml.Linq.XElement")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadOverAttribute", 
      new JSIL.MethodSignature($.Boolean, [$asm14.TypeRef("System.Xml.Linq.XAttribute"), $.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadOverNode", 
      new JSIL.MethodSignature($.Boolean, [$asm14.TypeRef("System.Xml.Linq.XNode")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadOverText", 
      new JSIL.MethodSignature($.Boolean, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadToDescendant", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadToEnd", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadToFollowing", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadToNextSibling", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ResolveEntity", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_IsEndElement", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Skip", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.get_LineNumber", 
      new JSIL.MethodSignature($.Int32, [], [])
    )
      .Overrides(1, "get_LineNumber");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.get_LinePosition", 
      new JSIL.MethodSignature($.Int32, [], [])
    )
      .Overrides(1, "get_LinePosition");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.HasLineInfo", 
      new JSIL.MethodSignature($.Boolean, [], [])
    )
      .Overrides(1, "HasLineInfo");

    $.Field({Static:false, Public:false}, "source", $.Object); 
    $.Field({Static:false, Public:false}, "parent", $.Object); 
    $.Field({Static:false, Public:false}, "state", $asm13.TypeRef("System.Xml.ReadState")); 
    $.Field({Static:false, Public:false}, "root", $asm14.TypeRef("System.Xml.Linq.XNode")); 
    $.Field({Static:false, Public:false}, "nameTable", $asm13.TypeRef("System.Xml.XmlNameTable")); 
    $.Field({Static:false, Public:false}, "omitDuplicateNamespaces", $.Boolean); 
    $.Field({Static:false, Public:false}, "dtdInfo", $asm13.TypeRef("System.Xml.IDtdInfo")); 
    $.Field({Static:false, Public:false}, "dtdInfoInitialized", $.Boolean); 
    $.Property({Static:false, Public:true , Virtual:true }, "AttributeCount", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "BaseURI", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "Depth", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "EOF", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "HasAttributes", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "HasValue", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "IsEmptyElement", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "LocalName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "Name", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "NamespaceURI", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "NameTable", $asm13.TypeRef("System.Xml.XmlNameTable"));

    $.Property({Static:false, Public:true , Virtual:true }, "NodeType", $asm13.TypeRef("System.Xml.XmlNodeType"));

    $.Property({Static:false, Public:true , Virtual:true }, "Prefix", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "ReadState", $asm13.TypeRef("System.Xml.ReadState"));

    $.Property({Static:false, Public:true , Virtual:true }, "Settings", $asm13.TypeRef("System.Xml.XmlReaderSettings"));

    $.Property({Static:false, Public:true , Virtual:true }, "Value", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "XmlLang", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "XmlSpace", $asm13.TypeRef("System.Xml.XmlSpace"));

    $.Property({Static:false, Public:false, Virtual:true }, "DtdInfo", $asm13.TypeRef("System.Xml.IDtdInfo"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.LineNumber", $.Int32);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.LinePosition", $.Int32);

    $.Property({Static:false, Public:false}, "IsEndElement", $.Boolean);

    $.Property({Static:false, Public:false}, "IsInteractive", $.Boolean);

    $.ImplementInterfaces(
      /* 1 */ $asm13.TypeRef("System.Xml.IXmlLineInfo")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.XPath.XNodeNavigator */ 

(function XNodeNavigator$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.Xml.XPath.XPathNavigator"), 
      Name: "System.Xml.XPath.XNodeNavigator", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XNode"), $asm13.TypeRef("System.Xml.XmlNameTable")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Type], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CheckValidity", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.Xml.Schema.XmlSchemaSet"), $asm13.TypeRef("System.Xml.Schema.ValidationEventHandler")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.XPath.XPathNavigator"), [], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "CollectText", 
      new JSIL.MethodSignature($.String, [$asm14.TypeRef("System.Xml.Linq.XText")], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateNameTable", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.XmlNameTable"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_BaseURI", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_HasAttributes", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_HasChildren", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsEmptyElement", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LocalName", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Name", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NamespaceURI", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NameTable", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.XmlNameTable"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NodeType", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.XPath.XPathNodeType"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Prefix", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_UnderlyingObject", 
      new JSIL.MethodSignature($.Object, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Value", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetElementContentMask", 
      new JSIL.MethodSignature($.Int32, [$asm13.TypeRef("System.Xml.XPath.XPathNodeType")], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetFirstNamespaceDeclarationGlobal", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XAttribute"), [$asm14.TypeRef("System.Xml.Linq.XElement")], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetFirstNamespaceDeclarationLocal", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XAttribute"), [$asm14.TypeRef("System.Xml.Linq.XElement")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetLocalName", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetNamespaceURI", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetNextNamespaceDeclarationGlobal", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XAttribute"), [$asm14.TypeRef("System.Xml.Linq.XAttribute")], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetNextNamespaceDeclarationLocal", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XAttribute"), [$asm14.TypeRef("System.Xml.Linq.XAttribute")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetPrefix", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetXmlNamespaceDeclaration", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Xml.Linq.XAttribute"), [], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "HasNamespaceDeclarationInScope", 
      new JSIL.MethodSignature($.Boolean, [$asm14.TypeRef("System.Xml.Linq.XAttribute"), $asm14.TypeRef("System.Xml.Linq.XElement")], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsContent", 
      new JSIL.MethodSignature($.Boolean, [$asm14.TypeRef("System.Xml.Linq.XContainer"), $asm14.TypeRef("System.Xml.Linq.XNode")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "IsSamePosition", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.Xml.XPath.XPathNavigator")], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsSamePosition", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsXmlNamespaceDeclaration", 
      new JSIL.MethodSignature($.Boolean, [$asm14.TypeRef("System.Xml.Linq.XAttribute")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveTo", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.Xml.XPath.XPathNavigator")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToAttribute", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToChild", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToChild", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.Xml.XPath.XPathNodeType")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToFirstAttribute", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToFirstChild", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToFirstNamespace", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.Xml.XPath.XPathNamespaceScope")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToId", 
      new JSIL.MethodSignature($.Boolean, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToNamespace", 
      new JSIL.MethodSignature($.Boolean, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToNext", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToNext", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToNext", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.Xml.XPath.XPathNodeType")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToNextAttribute", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToNextNamespace", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.Xml.XPath.XPathNamespaceScope")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToParent", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToPrevious", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadSubtree", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.XmlReader"), [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.get_LineNumber", 
      new JSIL.MethodSignature($.Int32, [], [])
    )
      .Overrides(3, "get_LineNumber");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.get_LinePosition", 
      new JSIL.MethodSignature($.Int32, [], [])
    )
      .Overrides(3, "get_LinePosition");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.HasLineInfo", 
      new JSIL.MethodSignature($.Boolean, [], [])
    )
      .Overrides(3, "HasLineInfo");

    $.Constant({Static:true , Public:false}, "DocumentContentMask", 386); 
    $.Constant({Static:true , Public:false}, "TextMask", 24); 
    $.Field({Static:true , Public:false, ReadOnly:true }, "ElementContentMasks", $jsilcore.TypeRef("System.Array", [$.Int32])); 
    $.Field({Static:true , Public:false}, "XmlNamespaceDeclaration", $asm14.TypeRef("System.Xml.Linq.XAttribute")); 
    $.Field({Static:false, Public:false}, "source", $.Object); 
    $.Field({Static:false, Public:false}, "parent", $asm14.TypeRef("System.Xml.Linq.XElement")); 
    $.Field({Static:false, Public:false}, "nameTable", $asm13.TypeRef("System.Xml.XmlNameTable")); 
    $.Property({Static:false, Public:true , Virtual:true }, "BaseURI", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "HasAttributes", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "HasChildren", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "IsEmptyElement", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "LocalName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "Name", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "NamespaceURI", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "NameTable", $asm13.TypeRef("System.Xml.XmlNameTable"));

    $.Property({Static:false, Public:true , Virtual:true }, "NodeType", $asm13.TypeRef("System.Xml.XPath.XPathNodeType"));

    $.Property({Static:false, Public:true , Virtual:true }, "Prefix", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "UnderlyingObject", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "Value", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.LineNumber", $.Int32);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.LinePosition", $.Int32);

    $.ImplementInterfaces(
      /* 3 */ $asm13.TypeRef("System.Xml.IXmlLineInfo")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Xml.XPath.XPathEvaluator */ 

(function XPathEvaluator$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.ValueType"), 
      Name: "System.Xml.XPath.XPathEvaluator", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, "Evaluate", 
      new JSIL.MethodSignature($.Object, [
          $asm14.TypeRef("System.Xml.Linq.XNode"), $.String, 
          $asm13.TypeRef("System.Xml.IXmlNamespaceResolver")
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "EvaluateIterator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), [$asm13.TypeRef("System.Xml.XPath.XPathNodeIterator")], ["T"])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.XPath.XPathEvaluator/<EvaluateIterator>d__0`1 */ 

(function $lEvaluateIterator$gd__0$b1$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.XPath.XPathEvaluator/<EvaluateIterator>d__0`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    )
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "$l$gm__Finally6", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      new JSIL.MethodSignature($.Boolean, [], [])
    )
      .Overrides(3, "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lT$g.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [new JSIL.GenericParameter("T", "System.Xml.XPath.XPathEvaluator/<EvaluateIterator>d__0`1")]), [], [])
    )
      .Overrides(0, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lT$g.get_Current", 
      new JSIL.MethodSignature(new JSIL.GenericParameter("T", "System.Xml.XPath.XPathEvaluator/<EvaluateIterator>d__0`1"), [], [])
    )
      .Overrides(2, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.IEnumerator"), [], [])
    )
      .Overrides(1, "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      new JSIL.MethodSignature($.Object, [], [])
    )
      .Overrides(3, "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(3, "Reset")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(4, "Dispose");

    $.Field({Static:false, Public:false}, "$current", $.GenericParameter("T")); 
    $.Field({Static:false, Public:false}, "$state", $.Int32); 
    $.Field({Static:false, Public:false}, "$initialThreadId", $.Int32); 
    $.Field({Static:false, Public:true }, "result", $asm13.TypeRef("System.Xml.XPath.XPathNodeIterator")); 
    $.Field({Static:false, Public:true }, "$result", $asm13.TypeRef("System.Xml.XPath.XPathNodeIterator")); 
    $.Field({Static:false, Public:true }, "navigator", $asm13.TypeRef("System.Xml.XPath.XPathNavigator")); 
    $.Field({Static:false, Public:true }, "r", $.Object); 
    $.Field({Static:false, Public:true }, "t", $asm14.TypeRef("System.Xml.Linq.XText")); 
    $.Field({Static:false, Public:true }, "$this", $asm14.TypeRef("System.Xml.XPath.XPathEvaluator")); 
    $.Field({Static:false, Public:true }, "$wrap4", $asm09.TypeRef("System.Collections.IEnumerator")); 
    $.Field({Static:false, Public:true }, "$wrap5", $asm09.TypeRef("System.IDisposable")); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lT$g.Current", new JSIL.GenericParameter("T", "System.Xml.XPath.XPathEvaluator/<EvaluateIterator>d__0`1"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [new JSIL.GenericParameter("T", "System.Xml.XPath.XPathEvaluator/<EvaluateIterator>d__0`1")]), 
      /* 1 */ $asm09.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [new JSIL.GenericParameter("T", "System.Xml.XPath.XPathEvaluator/<EvaluateIterator>d__0`1")]), 
      /* 3 */ $asm09.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm09.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Schema.XNodeValidator */ 

(function XNodeValidator$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Schema.XNodeValidator", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.Xml.Schema.XmlSchemaSet"), $asm13.TypeRef("System.Xml.Schema.ValidationEventHandler")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetDefaultAttributeSchemaInfo", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Xml.Schema.XmlSchemaInfo"), [$asm13.TypeRef("System.Xml.Schema.XmlSchemaAttribute")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetDefaultValue", 
      new JSIL.MethodSignature($.String, [$asm13.TypeRef("System.Xml.Schema.XmlSchemaAttribute")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetDefaultValue", 
      new JSIL.MethodSignature($.String, [$asm13.TypeRef("System.Xml.Schema.XmlSchemaElement")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "PushAncestorsAndSelf", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XElement")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "PushElement", 
      new JSIL.MethodSignature(null, [
          $asm14.TypeRef("System.Xml.Linq.XElement"), $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReplaceSchemaInfo", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XObject"), $asm13.TypeRef("System.Xml.Schema.XmlSchemaInfo")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Validate", 
      new JSIL.MethodSignature(null, [
          $asm14.TypeRef("System.Xml.Linq.XObject"), $asm13.TypeRef("System.Xml.Schema.XmlSchemaObject"), 
          $.Boolean
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateAttribute", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XAttribute")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateAttributes", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XElement")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateElement", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XElement")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateNodes", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Xml.Linq.XElement")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidationCallback", 
      new JSIL.MethodSignature(null, [$.Object, $asm13.TypeRef("System.Xml.Schema.ValidationEventArgs")], [])
    );

    $.Field({Static:false, Public:false}, "schemas", $asm13.TypeRef("System.Xml.Schema.XmlSchemaSet")); 
    $.Field({Static:false, Public:false}, "validationEventHandler", $asm13.TypeRef("System.Xml.Schema.ValidationEventHandler")); 
    $.Field({Static:false, Public:false}, "source", $asm14.TypeRef("System.Xml.Linq.XObject")); 
    $.Field({Static:false, Public:false}, "addSchemaInfo", $.Boolean); 
    $.Field({Static:false, Public:false}, "namespaceManager", $asm13.TypeRef("System.Xml.XmlNamespaceManager")); 
    $.Field({Static:false, Public:false}, "validator", $asm13.TypeRef("System.Xml.Schema.XmlSchemaValidator")); 
    $.Field({Static:false, Public:false}, "schemaInfos", $asm09.TypeRef("System.Collections.Generic.Dictionary`2", [$asm13.TypeRef("System.Xml.Schema.XmlSchemaInfo"), $asm13.TypeRef("System.Xml.Schema.XmlSchemaInfo")])); 
    $.Field({Static:false, Public:false}, "defaultAttributes", $asm09.TypeRef("System.Collections.ArrayList")); 
    $.Field({Static:false, Public:false}, "xsiTypeName", $asm14.TypeRef("System.Xml.Linq.XName")); 
    $.Field({Static:false, Public:false}, "xsiNilName", $asm14.TypeRef("System.Xml.Linq.XName")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Schema.XmlSchemaInfoEqualityComparer */ 

(function XmlSchemaInfoEqualityComparer$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Schema.XmlSchemaInfoEqualityComparer", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.Xml.Schema.XmlSchemaInfo"), $asm13.TypeRef("System.Xml.Schema.XmlSchemaInfo")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      new JSIL.MethodSignature($.Int32, [$asm13.TypeRef("System.Xml.Schema.XmlSchemaInfo")], [])
    );

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEqualityComparer`1", [$asm13.TypeRef("System.Xml.Schema.XmlSchemaInfo")])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class FXAssembly */ 

(function FXAssembly$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("FXAssembly", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Constant({Static:true , Public:false}, "Version", "4.0.0.0"); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ThisAssembly */ 

(function ThisAssembly$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("ThisAssembly", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Constant({Static:true , Public:false}, "Title", "System.Xml.Linq.dll"); 
    $.Constant({Static:true , Public:false}, "Description", "System.Xml.Linq.dll"); 
    $.Constant({Static:true , Public:false}, "DefaultAlias", "System.Xml.Linq.dll"); 
    $.Constant({Static:true , Public:false}, "Copyright", "\xa9 Microsoft Corporation.  All rights reserved."); 
    $.Constant({Static:true , Public:false}, "Version", "4.0.0.0"); 
    $.Constant({Static:true , Public:false}, "InformationalVersion", "4.0.30319.1"); 
    $.Constant({Static:true , Public:false}, "DailyBuildNumberStr", "30319"); 
    $.Constant({Static:true , Public:false}, "BuildRevisionStr", "1"); 
    $.Constant({Static:true , Public:false}, "DailyBuildNumber", 30319); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class AssemblyRef */ 

(function AssemblyRef$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("AssemblyRef", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Constant({Static:true , Public:false}, "EcmaPublicKey", "b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "EcmaPublicKeyToken", "b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "EcmaPublicKeyFull", "00000000000000000400000000000000"); 
    $.Constant({Static:true , Public:false}, "SilverlightPublicKey", "31bf3856ad364e35"); 
    $.Constant({Static:true , Public:false}, "SilverlightPublicKeyToken", "31bf3856ad364e35"); 
    $.Constant({Static:true , Public:false}, "SilverlightPublicKeyFull", "0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9"); 
    $.Constant({Static:true , Public:false}, "SilverlightPlatformPublicKey", "7cec85d7bea7798e"); 
    $.Constant({Static:true , Public:false}, "SilverlightPlatformPublicKeyToken", "7cec85d7bea7798e"); 
    $.Constant({Static:true , Public:false}, "SilverlightPlatformPublicKeyFull", "00240000048000009400000006020000002400005253413100040000010001008D56C76F9E8649383049F383C44BE0EC204181822A6C31CF5EB7EF486944D032188EA1D3920763712CCB12D75FB77E9811149E6148E5D32FBAAB37611C1878DDC19E20EF135D0CB2CFF2BFEC3D115810C3D9069638FE4BE215DBF795861920E5AB6F7DB2E2CEEF136AC23D5DD2BF031700AEC232F6C6B1C785B4305C123B37AB"); 
    $.Constant({Static:true , Public:false}, "PlatformPublicKey", "b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "PlatformPublicKeyToken", "b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "PlatformPublicKeyFull", "00000000000000000400000000000000"); 
    $.Constant({Static:true , Public:false}, "Mscorlib", "mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "SystemData", "System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "SystemDataOracleClient", "System.Data.OracleClient, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "System", "System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "SystemCore", "System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "SystemNumerics", "System.Numerics, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "SystemRuntimeRemoting", "System.Runtime.Remoting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "SystemWindowsForms", "System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "SystemXml", "System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "MicrosoftPublicKey", "b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "MicrosoftPublicKeyToken", "b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "MicrosoftPublicKeyFull", "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"); 
    $.Constant({Static:true , Public:false}, "SharedLibPublicKey", "31bf3856ad364e35"); 
    $.Constant({Static:true , Public:false}, "SharedLibPublicKeyToken", "31bf3856ad364e35"); 
    $.Constant({Static:true , Public:false}, "SharedLibPublicKeyFull", "0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9"); 
    $.Constant({Static:true , Public:false}, "SystemComponentModelDataAnnotations", "System.ComponentModel.DataAnnotations, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"); 
    $.Constant({Static:true , Public:false}, "SystemConfiguration", "System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemConfigurationInstall", "System.Configuration.Install, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemDeployment", "System.Deployment, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemDesign", "System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemDirectoryServices", "System.DirectoryServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemDrawingDesign", "System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemDrawing", "System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemEnterpriseServices", "System.EnterpriseServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemManagement", "System.Management, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemMessaging", "System.Messaging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemRuntimeSerializationFormattersSoap", "System.Runtime.Serialization.Formatters.Soap, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemSecurity", "System.Security, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemServiceProcess", "System.ServiceProcess, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemWeb", "System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemWebAbstractions", "System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"); 
    $.Constant({Static:true , Public:false}, "SystemWebDynamicData", "System.Web.DynamicData, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"); 
    $.Constant({Static:true , Public:false}, "SystemWebDynamicDataDesign", "System.Web.DynamicData.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"); 
    $.Constant({Static:true , Public:false}, "SystemWebEntityDesign", "System.Web.Entity.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "SystemWebExtensions", "System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"); 
    $.Constant({Static:true , Public:false}, "SystemWebExtensionsDesign", "System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"); 
    $.Constant({Static:true , Public:false}, "SystemWebMobile", "System.Web.Mobile, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemWebRegularExpressions", "System.Web.RegularExpressions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemWebRouting", "System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"); 
    $.Constant({Static:true , Public:false}, "SystemWebServices", "System.Web.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "WindowsBase", "WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"); 
    $.Constant({Static:true , Public:false}, "MicrosoftVisualStudio", "Microsoft.VisualStudio, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "MicrosoftVisualStudioWindowsForms", "Microsoft.VisualStudio.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "VJSharpCodeProvider", "VJSharpCodeProvider, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "ASPBrowserCapsPublicKey", "b7bd7678b977bd8f"); 
    $.Constant({Static:true , Public:false}, "ASPBrowserCapsFactory", "ASP.BrowserCapsFactory, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b7bd7678b977bd8f"); 
    $.Constant({Static:true , Public:false}, "MicrosoftVSDesigner", "Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "MicrosoftVisualStudioWeb", "Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "MicrosoftWebDesign", "Microsoft.Web.Design.Client, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "MicrosoftVSDesignerMobile", "Microsoft.VSDesigner.Mobile, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "MicrosoftJScript", "Microsoft.JScript, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.ResDescriptionAttribute */ 

(function ResDescriptionAttribute$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.ComponentModel.DescriptionAttribute"), 
      Name: "System.Xml.Linq.ResDescriptionAttribute", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Description", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.Field({Static:false, Public:false}, "replaced", $.Boolean); 
    $.Property({Static:false, Public:true , Virtual:true }, "Description", $.String);

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm09.System.AttributeTargets.$Flags(
          "All", "Assembly", "Class", "Constructor", 
          "Delegate", "Enum", "Event", "Field", 
          "GenericParameter", "Interface", "Method", "Module", 
          "Parameter", "Property", "ReturnValue", "Struct"
      )]; });

})();

/* class System.Xml.Linq.ResCategoryAttribute */ 

(function ResCategoryAttribute$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.ComponentModel.CategoryAttribute"), 
      Name: "System.Xml.Linq.ResCategoryAttribute", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetLocalizedString", 
      new JSIL.MethodSignature($.String, [$.String], [])
    );

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm09.System.AttributeTargets.$Flags(
          "All", "Assembly", "Class", "Constructor", 
          "Delegate", "Enum", "Event", "Field", 
          "GenericParameter", "Interface", "Method", "Module", 
          "Parameter", "Property", "ReturnValue", "Struct"
      )]; });

})();

/* class System.Xml.Linq.Res */ 

(function Res$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.Res", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Culture", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Globalization.CultureInfo"), [], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "get_Resources", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Resources.ResourceManager"), [], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetLoader", 
      new JSIL.MethodSignature($.Type, [], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetObject", 
      new JSIL.MethodSignature($.Object, [$.String], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetString", 
      new JSIL.MethodSignature($.String, [$.String, $jsilcore.TypeRef("System.Array", [$.Object])], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetString", 
      new JSIL.MethodSignature($.String, [$.String], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetString", 
      new JSIL.MethodSignature($.String, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])], [])
    );

    $.Constant({Static:true , Public:false}, "Argument_AddAttribute", "Argument_AddAttribute"); 
    $.Constant({Static:true , Public:false}, "Argument_AddNode", "Argument_AddNode"); 
    $.Constant({Static:true , Public:false}, "Argument_AddNonWhitespace", "Argument_AddNonWhitespace"); 
    $.Constant({Static:true , Public:false}, "Argument_ConvertToString", "Argument_ConvertToString"); 
    $.Constant({Static:true , Public:false}, "Argument_CreateNavigator", "Argument_CreateNavigator"); 
    $.Constant({Static:true , Public:false}, "Argument_InvalidExpandedName", "Argument_InvalidExpandedName"); 
    $.Constant({Static:true , Public:false}, "Argument_InvalidPIName", "Argument_InvalidPIName"); 
    $.Constant({Static:true , Public:false}, "Argument_InvalidPrefix", "Argument_InvalidPrefix"); 
    $.Constant({Static:true , Public:false}, "Argument_MustBeDerivedFrom", "Argument_MustBeDerivedFrom"); 
    $.Constant({Static:true , Public:false}, "Argument_NamespaceDeclarationPrefixed", "Argument_NamespaceDeclarationPrefixed"); 
    $.Constant({Static:true , Public:false}, "Argument_NamespaceDeclarationXml", "Argument_NamespaceDeclarationXml"); 
    $.Constant({Static:true , Public:false}, "Argument_NamespaceDeclarationXmlns", "Argument_NamespaceDeclarationXmlns"); 
    $.Constant({Static:true , Public:false}, "Argument_XObjectValue", "Argument_XObjectValue"); 
    $.Constant({Static:true , Public:false}, "InvalidOperation_BadNodeType", "InvalidOperation_BadNodeType"); 
    $.Constant({Static:true , Public:false}, "InvalidOperation_DocumentStructure", "InvalidOperation_DocumentStructure"); 
    $.Constant({Static:true , Public:false}, "InvalidOperation_DuplicateAttribute", "InvalidOperation_DuplicateAttribute"); 
    $.Constant({Static:true , Public:false}, "InvalidOperation_ExpectedEndOfFile", "InvalidOperation_ExpectedEndOfFile"); 
    $.Constant({Static:true , Public:false}, "InvalidOperation_ExpectedInteractive", "InvalidOperation_ExpectedInteractive"); 
    $.Constant({Static:true , Public:false}, "InvalidOperation_ExpectedNodeType", "InvalidOperation_ExpectedNodeType"); 
    $.Constant({Static:true , Public:false}, "InvalidOperation_ExternalCode", "InvalidOperation_ExternalCode"); 
    $.Constant({Static:true , Public:false}, "InvalidOperation_DeserializeInstance", "InvalidOperation_DeserializeInstance"); 
    $.Constant({Static:true , Public:false}, "InvalidOperation_MissingAncestor", "InvalidOperation_MissingAncestor"); 
    $.Constant({Static:true , Public:false}, "InvalidOperation_MissingParent", "InvalidOperation_MissingParent"); 
    $.Constant({Static:true , Public:false}, "InvalidOperation_MissingRoot", "InvalidOperation_MissingRoot"); 
    $.Constant({Static:true , Public:false}, "InvalidOperation_UnexpectedEvaluation", "InvalidOperation_UnexpectedEvaluation"); 
    $.Constant({Static:true , Public:false}, "InvalidOperation_UnexpectedNodeType", "InvalidOperation_UnexpectedNodeType"); 
    $.Constant({Static:true , Public:false}, "InvalidOperation_UnresolvedEntityReference", "InvalidOperation_UnresolvedEntityReference"); 
    $.Constant({Static:true , Public:false}, "InvalidOperation_WriteAttribute", "InvalidOperation_WriteAttribute"); 
    $.Constant({Static:true , Public:false}, "NotSupported_CheckValidity", "NotSupported_CheckValidity"); 
    $.Constant({Static:true , Public:false}, "NotSupported_MoveToId", "NotSupported_MoveToId"); 
    $.Constant({Static:true , Public:false}, "NotSupported_WriteBase64", "NotSupported_WriteBase64"); 
    $.Constant({Static:true , Public:false}, "NotSupported_WriteEntityRef", "NotSupported_WriteEntityRef"); 
    $.Field({Static:true , Public:false}, "loader", $.Type); 
    $.Field({Static:false, Public:false}, "resources", $asm09.TypeRef("System.Resources.ResourceManager")); 
    $.Property({Static:true , Public:false}, "Culture", $asm09.TypeRef("System.Globalization.CultureInfo"));

    $.Property({Static:true , Public:true }, "Resources", $asm09.TypeRef("System.Resources.ResourceManager"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

